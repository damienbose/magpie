2023-12-21 09:27:24,250	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 1
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results/BestImprovementNoTabu/epsilon_greedy/trial_1
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = BestImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = EpsilonGreedy
epsilon = 0.2

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-21 09:27:24,255	[INFO]	==== WARMUP ====
2023-12-21 09:27:26,840	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:27:26,841	[INFO]	WARM    SUCCESS               1205550                 
2023-12-21 09:27:27,876	[DEBUG]	EXEC>  SUCCESS 1205551
2023-12-21 09:27:27,876	[INFO]	WARM    SUCCESS               1205551                 
2023-12-21 09:27:28,867	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:27:28,868	[INFO]	WARM    SUCCESS               1205550                 
2023-12-21 09:27:29,857	[DEBUG]	EXEC>  SUCCESS 1205551
2023-12-21 09:27:29,857	[INFO]	WARM    SUCCESS               1205551                 
2023-12-21 09:27:30,908	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:27:30,908	[INFO]	WARM    SUCCESS               1205550                 
2023-12-21 09:27:30,909	[INFO]	INITIAL SUCCESS               1205550                 
2023-12-21 09:27:30,910	[INFO]	==== START: BestImprovementNoTabu ====
2023-12-21 09:27:31,734	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 14))
2023-12-21 09:27:31,735	[INFO]	1       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:27:32,538	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 6), ('triangle.cpp.xml', 'stmt', 13))
2023-12-21 09:27:32,538	[INFO]	2       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:27:33,372	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-21 09:27:33,373	[INFO]	3       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:27:33,516	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 17))
2023-12-21 09:27:33,516	[INFO]	4       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:33,639	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 3))
2023-12-21 09:27:33,639	[INFO]	5       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:33,766	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 14))
2023-12-21 09:27:33,766	[INFO]	6       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:33,888	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 12))
2023-12-21 09:27:33,888	[INFO]	7       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,024	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 12))
2023-12-21 09:27:34,024	[INFO]	8       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,151	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 4))
2023-12-21 09:27:34,151	[INFO]	9       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,274	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 16))
2023-12-21 09:27:34,274	[INFO]	10      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,396	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 21))
2023-12-21 09:27:34,396	[INFO]	11      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,528	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-21 09:27:34,528	[INFO]	12      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,672	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 0))
2023-12-21 09:27:34,673	[INFO]	13      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,820	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 3))
2023-12-21 09:27:34,820	[INFO]	14      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:34,968	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 0))
2023-12-21 09:27:34,969	[INFO]	15      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:35,105	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 15))
2023-12-21 09:27:35,105	[INFO]	16      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:35,242	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 17))
2023-12-21 09:27:35,242	[INFO]	17      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:36,035	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-21 09:27:36,035	[INFO]	18      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:27:36,191	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'return', 2))
2023-12-21 09:27:36,192	[INFO]	19      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:36,326	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 21))
2023-12-21 09:27:36,326	[INFO]	20      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:27:36,460	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 2))
2023-12-21 09:27:36,460	[INFO]	21      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:36,461	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  nanosleep(&ms,NULL);
 
   delay();
 

2023-12-21 09:27:36,579	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 13))
2023-12-21 09:27:36,579	[INFO]	22      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:36,580	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,11 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  if(a > b) {
+    tmp = a;
+    a = b;
+    b = tmp;
+  }
 
   delay();
 

2023-12-21 09:27:36,704	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 8))
2023-12-21 09:27:36,704	[INFO]	23      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:36,706	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  a = c;
 
   delay();
 

2023-12-21 09:27:36,835	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 21))
2023-12-21 09:27:36,836	[INFO]	24      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:36,837	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  return ISOSCELES; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:36,995	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 21))
2023-12-21 09:27:36,995	[INFO]	25      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:36,997	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  return ISOSCELES; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:37,139	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 8))
2023-12-21 09:27:37,140	[INFO]	26      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,141	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  a = c;
 
   delay();
 

2023-12-21 09:27:37,270	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 17))
2023-12-21 09:27:37,271	[INFO]	27      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,272	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,10 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a == b && b == c)
+    /*auto*/{
+      return EQUILATERAL;
+    }/*auto*/ //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:37,406	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 13))
2023-12-21 09:27:37,407	[INFO]	28      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,409	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,11 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  if(a > b) {
+    tmp = a;
+    a = b;
+    b = tmp;
+  }
 
   delay();
 

2023-12-21 09:27:37,547	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 11))
2023-12-21 09:27:37,547	[INFO]	29      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,549	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  b = c;
 
   delay();
 

2023-12-21 09:27:37,669	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 3))
2023-12-21 09:27:37,669	[INFO]	30      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,670	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  delay(); //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:37,797	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 7))
2023-12-21 09:27:37,797	[INFO]	31      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,799	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = a;
 
   delay();
 

2023-12-21 09:27:37,930	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 7))
2023-12-21 09:27:37,931	[INFO]	32      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:37,932	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  tmp = a; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:38,062	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 0))
2023-12-21 09:27:38,062	[INFO]	33      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,064	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  const struct timespec ms = {0, (long int) (0.001*1e9)};
 
   delay();
 

2023-12-21 09:27:38,191	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 21))
2023-12-21 09:27:38,191	[INFO]	34      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,192	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return ISOSCELES;
 
   delay();
 

2023-12-21 09:27:38,322	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 13))
2023-12-21 09:27:38,322	[INFO]	35      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,324	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,11 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  if(a > b) {
+    tmp = a;
+    a = b;
+    b = tmp;
+  }
 
   delay();
 

2023-12-21 09:27:38,446	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 6))
2023-12-21 09:27:38,446	[INFO]	36      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,447	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  b = tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:38,579	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 7))
2023-12-21 09:27:38,580	[INFO]	37      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,581	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = a;
 
   delay();
 

2023-12-21 09:27:38,715	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 1))
2023-12-21 09:27:38,716	[INFO]	38      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,717	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  double tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:38,858	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-21 09:27:38,859	[INFO]	39      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:38,860	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  b = tmp;
 
   delay();
 

2023-12-21 09:27:39,650	[DEBUG]	ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 14), ('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-21 09:27:39,650	[INFO]	40      TEST_CODE_ERROR      +None  [1 edit(s)]       
2023-12-21 09:27:39,651	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -12,6 +12,7 @@
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
+    a = b;
     tmp = a;
     a = b;
     b = tmp;

2023-12-21 09:27:39,787	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 4))
2023-12-21 09:27:39,788	[INFO]	41      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:39,789	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = a;
 
   delay();
 

2023-12-21 09:27:39,907	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 1))
2023-12-21 09:27:39,907	[INFO]	42      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-21 09:27:39,909	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  double tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-21 09:27:40,927	[DEBUG]	EXEC>  SUCCESS 1205741
2023-12-21 09:27:40,928	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:27:40,929	[INFO]	43      SUCCESS              +1205741 (100.02%) [1 edit(s)] 
2023-12-21 09:27:40,930	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -15,6 +15,11 @@
     tmp = a;
     a = b;
     b = tmp;
+  }
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
   }
 
   if(a > c) {

2023-12-21 09:27:41,765	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 3), ('triangle.cpp.xml', 'stmt', 0))
2023-12-21 09:27:41,765	[INFO]	44      TEST_CODE_ERROR      +None  [1 edit(s)]       
2023-12-21 09:27:41,767	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -13,7 +13,7 @@
   // Sort the sides so that a <= b <= c
   if(a > b) {
     tmp = a;
-    a = b;
+    const struct timespec ms = {0, (long int) (0.001*1e9)};
     b = tmp;
   }
 

2023-12-21 09:27:42,800	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:27:42,800	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:27:42,801	[INFO]	45      SUCCESS              +1205550 (100.0%) [1 edit(s)] 
2023-12-21 09:27:42,803	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -32,6 +32,11 @@
   if(a + b <= c)
     /*auto*/{
       return INVALID;
+      if(a > b) {
+        tmp = a;
+        a = b;
+        b = tmp;
+      }
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{

2023-12-21 09:27:43,803	[DEBUG]	EXEC>  SUCCESS 1205660
2023-12-21 09:27:43,804	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:43,804	[INFO]	46      SUCCESS               1205660 (100.01%) [2 edit(s)] 
2023-12-21 09:27:44,650	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:44,650	[INFO]	47      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:27:45,635	[DEBUG]	EXEC>  SUCCESS 1205641
2023-12-21 09:27:45,636	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 22), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:27:45,637	[INFO]	48      SUCCESS               1205641 (100.01%) [2 edit(s)] 
2023-12-21 09:27:46,652	[DEBUG]	EXEC>  SUCCESS 1205830
2023-12-21 09:27:46,653	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'if', 4))
2023-12-21 09:27:46,653	[INFO]	49      SUCCESS               1205830 (100.02%) [2 edit(s)] 
2023-12-21 09:27:47,678	[DEBUG]	EXEC>  SUCCESS 1205740
2023-12-21 09:27:47,678	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:27:47,679	[INFO]	50      SUCCESS               1205740 (100.02%) [2 edit(s)] 
2023-12-21 09:27:48,691	[DEBUG]	EXEC>  SUCCESS 1205577
2023-12-21 09:27:48,691	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 28), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:48,692	[INFO]	51      SUCCESS               1205577 (100.0%) [2 edit(s)] 
2023-12-21 09:27:49,699	[DEBUG]	EXEC>  SUCCESS 1205611
2023-12-21 09:27:49,700	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 30), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:27:49,701	[INFO]	52      SUCCESS               1205611 (100.01%) [2 edit(s)] 
2023-12-21 09:27:49,871	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:49,872	[INFO]	53      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:27:50,727	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:50,727	[INFO]	54      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:27:51,823	[DEBUG]	EXEC>  SUCCESS 1205625
2023-12-21 09:27:51,824	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:27:51,824	[INFO]	55      SUCCESS               1205625 (100.01%) [2 edit(s)] 
2023-12-21 09:27:51,968	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 3))
2023-12-21 09:27:51,969	[INFO]	56      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:27:52,978	[DEBUG]	EXEC>  SUCCESS 1205551
2023-12-21 09:27:52,978	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:27:52,979	[INFO]	57      SUCCESS               1205551 (100.0%) [2 edit(s)] 
2023-12-21 09:27:53,966	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:27:53,967	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'if', 4))
2023-12-21 09:27:53,968	[INFO]	58      SUCCESS               1205550 (100.0%) [2 edit(s)] 
2023-12-21 09:27:54,789	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 4), ('triangle.cpp.xml', 'if', 5))
2023-12-21 09:27:54,790	[INFO]	59      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:27:55,569	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:55,569	[INFO]	60      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:27:56,583	[DEBUG]	EXEC>  SUCCESS 1205659
2023-12-21 09:27:56,583	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:27:56,584	[INFO]	61      SUCCESS               1205659 (100.01%) [2 edit(s)] 
2023-12-21 09:27:57,595	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:27:57,596	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:27:57,596	[INFO]	62      SUCCESS               1205550 (100.0%) [2 edit(s)] 
2023-12-21 09:27:58,546	[DEBUG]	EXEC>  SUCCESS 1205640
2023-12-21 09:27:58,546	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:27:58,547	[INFO]	63      SUCCESS               1205640 (100.01%) [2 edit(s)] 
2023-12-21 09:27:59,573	[DEBUG]	EXEC>  SUCCESS 1205731
2023-12-21 09:27:59,574	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 14), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:27:59,574	[INFO]	64      SUCCESS               1205731 (100.02%) [2 edit(s)] 
2023-12-21 09:28:00,576	[DEBUG]	EXEC>  SUCCESS 1205577
2023-12-21 09:28:00,577	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 28), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:28:00,578	[INFO]	65      SUCCESS               1205577 (100.0%) [2 edit(s)] 
2023-12-21 09:28:00,580	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:28:00,581	[INFO]	66      SUCCESS              +1205640 (100.01%) [2 edit(s)] 
2023-12-21 09:28:00,582	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -27,11 +27,21 @@
     tmp = b;
     b = c;
     c = tmp;
+    if(b > c) {
+      tmp = b;
+      b = c;
+      c = tmp;
+    }
   }
 
   if(a + b <= c)
     /*auto*/{
       return INVALID;
+      if(a > b) {
+        tmp = a;
+        a = b;
+        b = tmp;
+      }
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{

2023-12-21 09:28:01,634	[DEBUG]	EXEC>  SUCCESS 1205587
2023-12-21 09:28:01,634	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 14), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:28:01,635	[INFO]	67      SUCCESS               1205587 (100.0%) [3 edit(s)] 
2023-12-21 09:28:01,786	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'if', 2))
2023-12-21 09:28:01,786	[INFO]	68      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:02,802	[DEBUG]	EXEC>  SUCCESS 1205740
2023-12-21 09:28:02,803	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:28:02,804	[INFO]	69      SUCCESS               1205740 (100.02%) [3 edit(s)] 
2023-12-21 09:28:03,823	[DEBUG]	EXEC>  SUCCESS 1205621
2023-12-21 09:28:03,824	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 30), ('triangle.cpp.xml', 'if', 5))
2023-12-21 09:28:03,825	[INFO]	70      SUCCESS               1205621 (100.01%) [3 edit(s)] 
2023-12-21 09:28:04,636	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:28:04,636	[INFO]	71      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:28:04,774	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:28:04,774	[INFO]	72      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:04,777	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:28:04,777	[INFO]	73      SUCCESS               1205740 (100.02%) [3 edit(s)] 
2023-12-21 09:28:05,755	[DEBUG]	EXEC>  SUCCESS 1558045
2023-12-21 09:28:05,755	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 5))
2023-12-21 09:28:05,756	[INFO]	74      SUCCESS               1558045 (129.24%) [3 edit(s)] 
2023-12-21 09:28:06,808	[DEBUG]	EXEC>  SUCCESS 1205596
2023-12-21 09:28:06,809	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 12), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:28:06,810	[INFO]	75      SUCCESS               1205596 (100.0%) [3 edit(s)] 
2023-12-21 09:28:06,949	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:06,950	[INFO]	76      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:07,082	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'if', 4))
2023-12-21 09:28:07,083	[INFO]	77      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:08,070	[DEBUG]	EXEC>  SUCCESS 1205732
2023-12-21 09:28:08,070	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:28:08,072	[INFO]	78      SUCCESS               1205732 (100.02%) [3 edit(s)] 
2023-12-21 09:28:08,964	[DEBUG]	EXEC>  SUCCESS 1203644
2023-12-21 09:28:08,965	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-21 09:28:08,965	[INFO]	79      SUCCESS              *1203644 (99.84%) [3 edit(s)] 
2023-12-21 09:28:08,968	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -32,6 +32,11 @@
   if(a + b <= c)
     /*auto*/{
       return INVALID;
+      if(a > b) {
+        tmp = a;
+        a = b;
+        b = tmp;
+      }
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
@@ -40,6 +45,11 @@
   if(a == b || b == c)
     /*auto*/{
       return ISOSCELES;
+      if(a > c) {
+        tmp = a;
+        a = c;
+        c = tmp;
+      }
     }/*auto*/
   return SCALENE;
 }

2023-12-21 09:28:09,823	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-21 09:28:09,823	[INFO]	80      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:28:10,812	[DEBUG]	EXEC>  SUCCESS 1205746
2023-12-21 09:28:10,813	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:28:10,813	[INFO]	81      SUCCESS               1205746 (100.02%) [3 edit(s)] 
2023-12-21 09:28:10,964	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:28:10,964	[INFO]	82      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:11,947	[DEBUG]	EXEC>  SUCCESS 1205677
2023-12-21 09:28:11,948	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 4), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:11,949	[INFO]	83      SUCCESS               1205677 (100.01%) [3 edit(s)] 
2023-12-21 09:28:12,964	[DEBUG]	EXEC>  SUCCESS 1205676
2023-12-21 09:28:12,964	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:12,965	[INFO]	84      SUCCESS               1205676 (100.01%) [3 edit(s)] 
2023-12-21 09:28:13,119	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:13,119	[INFO]	85      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:13,245	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:13,245	[INFO]	86      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:28:13,378	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:28:13,378	[INFO]	87      COMPILE_CODE_ERROR   +None  [3 edit(s)]       
2023-12-21 09:28:13,380	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,6 +1,11 @@
 #include "triangle.hpp"
 
 void delay() {
+  if(a > b) {
+    tmp = a;
+    a = b;
+    b = tmp;
+  }
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
@@ -32,6 +37,11 @@
   if(a + b <= c)
     /*auto*/{
       return INVALID;
+      if(a > b) {
+        tmp = a;
+        a = b;
+        b = tmp;
+      }
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
@@ -40,6 +50,11 @@
   if(a == b || b == c)
     /*auto*/{
       return ISOSCELES;
+      if(a > c) {
+        tmp = a;
+        a = c;
+        c = tmp;
+      }
     }/*auto*/
   return SCALENE;
 }

2023-12-21 09:28:14,277	[DEBUG]	EXEC>  SUCCESS 1203736
2023-12-21 09:28:14,278	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'if', 4))
2023-12-21 09:28:14,278	[INFO]	88      SUCCESS               1203736 (99.85%) [4 edit(s)] 
2023-12-21 09:28:15,148	[DEBUG]	EXEC>  SUCCESS 1203669
2023-12-21 09:28:15,149	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 30), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:15,149	[INFO]	89      SUCCESS               1203669 (99.84%) [4 edit(s)] 
2023-12-21 09:28:16,048	[DEBUG]	EXEC>  SUCCESS 1203646
2023-12-21 09:28:16,048	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 5))
2023-12-21 09:28:16,049	[INFO]	90      SUCCESS               1203646 (99.84%) [4 edit(s)] 
2023-12-21 09:28:16,917	[DEBUG]	EXEC>  SUCCESS 1203772
2023-12-21 09:28:16,918	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:16,918	[INFO]	91      SUCCESS               1203772 (99.85%) [4 edit(s)] 
2023-12-21 09:28:17,854	[DEBUG]	EXEC>  SUCCESS 1203644
2023-12-21 09:28:17,854	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:17,855	[INFO]	92      SUCCESS               1203644 (99.84%) [4 edit(s)] 
2023-12-21 09:28:18,013	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:18,014	[INFO]	93      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-21 09:28:18,906	[DEBUG]	EXEC>  SUCCESS 1203644
2023-12-21 09:28:18,907	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 21), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:18,907	[INFO]	94      SUCCESS               1203644 (99.84%) [4 edit(s)] 
2023-12-21 09:28:19,859	[DEBUG]	EXEC>  SUCCESS 1203706
2023-12-21 09:28:19,859	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:19,860	[INFO]	95      SUCCESS               1203706 (99.85%) [4 edit(s)] 
2023-12-21 09:28:19,862	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:19,863	[INFO]	96      SUCCESS               1203706 (99.85%) [4 edit(s)] 
2023-12-21 09:28:20,766	[DEBUG]	EXEC>  SUCCESS 1203771
2023-12-21 09:28:20,767	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:28:20,767	[INFO]	97      SUCCESS               1203771 (99.85%) [4 edit(s)] 
2023-12-21 09:28:21,714	[DEBUG]	EXEC>  SUCCESS 1203647
2023-12-21 09:28:21,715	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 30), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:21,715	[INFO]	98      SUCCESS               1203647 (99.84%) [4 edit(s)] 
2023-12-21 09:28:21,874	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:21,875	[INFO]	99      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-21 09:28:22,033	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:28:22,034	[INFO]	100     COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-21 09:28:22,036	[INFO]	==== END ====
2023-12-21 09:28:22,036	[INFO]	
2023-12-21 09:28:22,036	[INFO]	==== REPORT ====
2023-12-21 09:28:22,037	[INFO]	Termination: step budget
2023-12-21 09:28:22,038	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1703150844.log
2023-12-21 09:28:22,041	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1703150844.patch
2023-12-21 09:28:22,041	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1703150844.diff
2023-12-21 09:28:22,041	[INFO]	Best fitness: 1203644
2023-12-21 09:28:22,042	[INFO]	Best patch: IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'if', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-21 09:28:22,043	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -32,6 +32,11 @@
   if(a + b <= c)
     /*auto*/{
       return INVALID;
+      if(a > b) {
+        tmp = a;
+        a = b;
+        b = tmp;
+      }
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
@@ -40,6 +45,11 @@
   if(a == b || b == c)
     /*auto*/{
       return ISOSCELES;
+      if(a > c) {
+        tmp = a;
+        a = c;
+        c = tmp;
+      }
     }/*auto*/
   return SCALENE;
 }


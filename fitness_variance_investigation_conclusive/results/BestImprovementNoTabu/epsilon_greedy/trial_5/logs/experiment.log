2023-12-27 22:50:52,743	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 5
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results/BestImprovementNoTabu/epsilon_greedy/trial_5
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = BestImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = EpsilonGreedy
epsilon = 0.2

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-27 22:50:52,751	[INFO]	==== WARMUP ====
2023-12-27 22:51:00,584	[DEBUG]	EXEC>  SUCCESS 1204247
2023-12-27 22:51:00,587	[INFO]	WARM    SUCCESS               1204247                 
2023-12-27 22:51:03,763	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-27 22:51:03,763	[INFO]	WARM    SUCCESS               1204239                 
2023-12-27 22:51:06,913	[DEBUG]	EXEC>  SUCCESS 1259684
2023-12-27 22:51:06,913	[INFO]	WARM    SUCCESS               1259684                 
2023-12-27 22:51:10,308	[DEBUG]	EXEC>  SUCCESS 1387015
2023-12-27 22:51:10,324	[INFO]	WARM    SUCCESS               1387015                 
2023-12-27 22:51:13,873	[DEBUG]	EXEC>  SUCCESS 1204243
2023-12-27 22:51:13,883	[INFO]	WARM    SUCCESS               1204243                 
2023-12-27 22:51:13,883	[INFO]	INITIAL SUCCESS               1204243                 
2023-12-27 22:51:13,883	[INFO]	==== START: BestImprovementNoTabu ====
2023-12-27 22:51:16,353	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-27 22:51:16,354	[INFO]	1       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:17,154	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 5))
2023-12-27 22:51:17,154	[INFO]	2       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:19,515	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'return', 3))
2023-12-27 22:51:19,515	[INFO]	3       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:22,177	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 2), ('triangle.cpp.xml', 'stmt', 16))
2023-12-27 22:51:22,179	[INFO]	4       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:22,858	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 18))
2023-12-27 22:51:22,859	[INFO]	5       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:23,424	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 18))
2023-12-27 22:51:23,424	[INFO]	6       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:24,023	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 12))
2023-12-27 22:51:24,023	[INFO]	7       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:24,626	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:51:24,627	[INFO]	8       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:27,200	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 4), ('triangle.cpp.xml', 'stmt', 16))
2023-12-27 22:51:27,200	[INFO]	9       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:27,923	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 0))
2023-12-27 22:51:27,923	[INFO]	10      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:28,502	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 4))
2023-12-27 22:51:28,502	[INFO]	11      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:29,129	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 11))
2023-12-27 22:51:29,130	[INFO]	12      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:29,757	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 6))
2023-12-27 22:51:29,758	[INFO]	13      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:30,309	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 13))
2023-12-27 22:51:30,309	[INFO]	14      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:30,897	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 22))
2023-12-27 22:51:30,897	[INFO]	15      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:33,380	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 8), ('triangle.cpp.xml', 'stmt', 17))
2023-12-27 22:51:33,381	[INFO]	16      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:34,087	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 13))
2023-12-27 22:51:34,088	[INFO]	17      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:36,526	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-27 22:51:36,526	[INFO]	18      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:37,250	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:51:37,251	[INFO]	19      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:37,840	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 21))
2023-12-27 22:51:37,841	[INFO]	20      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:40,303	[DEBUG]	ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 0))
2023-12-27 22:51:40,304	[INFO]	21      TEST_CODE_ERROR      +None  [1 edit(s)]       
2023-12-27 22:51:40,308	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -31,7 +31,7 @@
 
   if(a + b <= c)
     /*auto*/{
-      return INVALID;
+      const struct timespec ms = {0, (long int) (0.001*1e9)};
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{

2023-12-27 22:51:42,836	[DEBUG]	ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:51:42,836	[INFO]	22      TEST_CODE_ERROR      +None  [1 edit(s)]       
2023-12-27 22:51:42,837	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -39,7 +39,7 @@
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{
-      return ISOSCELES;
+      c = tmp;
     }/*auto*/
   return SCALENE;
 }

2023-12-27 22:51:43,587	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 6))
2023-12-27 22:51:43,588	[INFO]	23      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:43,593	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  b = tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:44,057	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 19))
2023-12-27 22:51:44,057	[INFO]	24      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:44,059	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  return INVALID; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:44,704	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 18))
2023-12-27 22:51:44,704	[INFO]	25      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:44,706	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,10 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a == b || b == c)
+    /*auto*/{
+      return ISOSCELES;
+    }/*auto*/ //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:45,238	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:51:45,239	[INFO]	26      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:45,240	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  c = tmp;
 
   delay();
 

2023-12-27 22:51:45,826	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 22))
2023-12-27 22:51:45,827	[INFO]	27      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:45,829	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return SCALENE;
 
   delay();
 

2023-12-27 22:51:48,306	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-27 22:51:48,307	[INFO]	28      TEST_CODE_ERROR      +None  [1 edit(s)]       
2023-12-27 22:51:48,310	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -31,7 +31,7 @@
 
   if(a + b <= c)
     /*auto*/{
-      return INVALID;
+      
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{

2023-12-27 22:51:48,918	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 2))
2023-12-27 22:51:48,918	[INFO]	29      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:48,920	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  nanosleep(&ms,NULL); //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:49,469	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:51:49,469	[INFO]	30      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:49,471	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  c = tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:50,079	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 22))
2023-12-27 22:51:50,081	[INFO]	31      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:50,083	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return SCALENE;
 
   delay();
 

2023-12-27 22:51:50,657	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 1))
2023-12-27 22:51:50,657	[INFO]	32      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:50,673	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  double tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:51,226	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 4))
2023-12-27 22:51:51,227	[INFO]	33      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:51,229	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  tmp = a; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:51,759	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 14))
2023-12-27 22:51:51,760	[INFO]	34      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:51,762	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,11 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
+  } //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:52,269	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:51:52,270	[INFO]	35      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:52,272	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = b;
 
   delay();
 

2023-12-27 22:51:52,833	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-27 22:51:52,833	[INFO]	36      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:52,836	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  b = tmp;
 
   delay();
 

2023-12-27 22:51:53,438	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 3))
2023-12-27 22:51:53,438	[INFO]	37      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:53,440	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  delay();
 
   delay();
 

2023-12-27 22:51:53,989	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 12))
2023-12-27 22:51:53,990	[INFO]	38      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:53,992	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  c = tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:54,562	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 16))
2023-12-27 22:51:54,563	[INFO]	39      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:54,565	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,10 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  if(a + b <= c)
+    /*auto*/{
+      return INVALID;
+    }/*auto*/
 
   delay();
 

2023-12-27 22:51:55,152	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 18))
2023-12-27 22:51:55,152	[INFO]	40      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:55,154	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,10 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a == b || b == c)
+    /*auto*/{
+      return ISOSCELES;
+    }/*auto*/ //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:55,789	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 19))
2023-12-27 22:51:55,789	[INFO]	41      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:55,793	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return INVALID;
 
   delay();
 

2023-12-27 22:51:56,443	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:51:56,443	[INFO]	42      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:56,445	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  tmp = b; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:56,954	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:51:56,955	[INFO]	43      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:56,956	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  tmp = b; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:57,474	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 22))
2023-12-27 22:51:57,474	[INFO]	44      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:57,482	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return SCALENE;
 
   delay();
 

2023-12-27 22:51:58,044	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 22))
2023-12-27 22:51:58,044	[INFO]	45      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:58,045	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  return SCALENE; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:51:58,610	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 16))
2023-12-27 22:51:58,610	[INFO]	46      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:51:58,614	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,10 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a + b <= c)
+    /*auto*/{
+      return INVALID;
+    }/*auto*/ //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:01,282	[DEBUG]	EXEC>  SUCCESS 1204245
2023-12-27 22:52:01,283	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 0))
2023-12-27 22:52:01,283	[INFO]	47      SUCCESS              +1204245 (100.0%) [1 edit(s)] 
2023-12-27 22:52:01,285	[DEBUG]	
2023-12-27 22:52:01,925	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-27 22:52:01,926	[INFO]	48      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:01,929	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  b = tmp;
 
   delay();
 

2023-12-27 22:52:02,537	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 17))
2023-12-27 22:52:02,538	[INFO]	49      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:02,540	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,10 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a == b && b == c)
+    /*auto*/{
+      return EQUILATERAL;
+    }/*auto*/ //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:03,055	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 13))
2023-12-27 22:52:03,055	[INFO]	50      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:03,057	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,11 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a > b) {
+    tmp = a;
+    a = b;
+    b = tmp;
+  } //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:03,059	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 0))
2023-12-27 22:52:03,059	[INFO]	51      SUCCESS              +1204245 (100.0%) [1 edit(s)] 
2023-12-27 22:52:03,060	[DEBUG]	
2023-12-27 22:52:03,587	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 2))
2023-12-27 22:52:03,588	[INFO]	52      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:03,590	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  nanosleep(&ms,NULL); //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:04,150	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 4))
2023-12-27 22:52:04,151	[INFO]	53      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:04,152	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = a;
 
   delay();
 

2023-12-27 22:52:04,737	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 20))
2023-12-27 22:52:04,737	[INFO]	54      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:04,739	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return EQUILATERAL;
 
   delay();
 

2023-12-27 22:52:05,262	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:52:05,262	[INFO]	55      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:05,264	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  c = tmp;
 
   delay();
 

2023-12-27 22:52:05,777	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:52:05,777	[INFO]	56      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:05,779	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = b;
 
   delay();
 

2023-12-27 22:52:06,387	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 8))
2023-12-27 22:52:06,387	[INFO]	57      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:06,390	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  a = c; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:06,906	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 3))
2023-12-27 22:52:06,906	[INFO]	58      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:06,908	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  delay(); //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:06,910	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 0))
2023-12-27 22:52:06,910	[INFO]	59      SUCCESS              +1204245 (100.0%) [1 edit(s)] 
2023-12-27 22:52:06,911	[DEBUG]	
2023-12-27 22:52:07,461	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 21))
2023-12-27 22:52:07,462	[INFO]	60      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:07,464	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return ISOSCELES;
 
   delay();
 

2023-12-27 22:52:08,051	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 14))
2023-12-27 22:52:08,051	[INFO]	61      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:08,053	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,11 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
+  } //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:08,650	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 4))
2023-12-27 22:52:08,650	[INFO]	62      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:08,652	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  tmp = a;
 
   delay();
 

2023-12-27 22:52:09,235	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 16))
2023-12-27 22:52:09,235	[INFO]	63      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:09,237	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,10 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  if(a + b <= c)
+    /*auto*/{
+      return INVALID;
+    }/*auto*/
 
   delay();
 

2023-12-27 22:52:09,807	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 2))
2023-12-27 22:52:09,807	[INFO]	64      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:09,809	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  nanosleep(&ms,NULL); //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:10,333	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:52:10,334	[INFO]	65      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:10,345	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  c = tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:10,353	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 1))
2023-12-27 22:52:10,353	[INFO]	66      SUCCESS              +1204245 (100.0%) [1 edit(s)] 
2023-12-27 22:52:10,354	[DEBUG]	
2023-12-27 22:52:10,891	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 1))
2023-12-27 22:52:10,891	[INFO]	67      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:10,893	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  double tmp; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:11,514	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 22))
2023-12-27 22:52:11,515	[INFO]	68      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:11,517	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  return SCALENE;
 
   delay();
 

2023-12-27 22:52:12,033	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 11))
2023-12-27 22:52:12,033	[INFO]	69      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:12,035	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  b = c; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:12,738	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 14))
2023-12-27 22:52:12,739	[INFO]	70      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:12,740	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,11 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
+  } //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:13,319	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 11))
2023-12-27 22:52:13,319	[INFO]	71      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:13,321	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,7 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  b = c; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 

2023-12-27 22:52:13,323	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 1))
2023-12-27 22:52:13,323	[INFO]	72      SUCCESS              +1204245 (100.0%) [1 edit(s)] 
2023-12-27 22:52:13,324	[DEBUG]	
2023-12-27 22:52:13,792	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 5))
2023-12-27 22:52:13,792	[INFO]	73      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:13,794	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,7 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  a = b;
 
   delay();
 

2023-12-27 22:52:14,113	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 15))
2023-12-27 22:52:14,114	[INFO]	74      COMPILE_CODE_ERROR   +None  [1 edit(s)]       
2023-12-27 22:52:14,117	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,7 +6,11 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  if(b > c) {
+    tmp = b;
+    b = c;
+    c = tmp;
+  }
 
   delay();
 

2023-12-27 22:52:14,118	[INFO]	==== END ====
2023-12-27 22:52:14,118	[INFO]	
2023-12-27 22:52:14,118	[INFO]	==== REPORT ====
2023-12-27 22:52:14,119	[INFO]	Termination: time budget
2023-12-27 22:52:14,119	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1703717478.log

2023-12-27 22:50:52,582	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 7
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results/BestImprovementNoTabu/epsilon_greedy/trial_7
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = BestImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = EpsilonGreedy
epsilon = 0.2

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-27 22:50:52,591	[INFO]	==== WARMUP ====
2023-12-27 22:50:59,798	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-27 22:50:59,801	[INFO]	WARM    SUCCESS               1204240                 
2023-12-27 22:51:02,809	[DEBUG]	EXEC>  SUCCESS 1333833
2023-12-27 22:51:02,810	[INFO]	WARM    SUCCESS               1333833                 
2023-12-27 22:51:05,936	[DEBUG]	EXEC>  SUCCESS 1204238
2023-12-27 22:51:05,939	[INFO]	WARM    SUCCESS               1204238                 
2023-12-27 22:51:09,089	[DEBUG]	EXEC>  SUCCESS 1204242
2023-12-27 22:51:09,090	[INFO]	WARM    SUCCESS               1204242                 
2023-12-27 22:51:12,484	[DEBUG]	EXEC>  SUCCESS 1204241
2023-12-27 22:51:12,487	[INFO]	WARM    SUCCESS               1204241                 
2023-12-27 22:51:12,487	[INFO]	INITIAL SUCCESS               1204241                 
2023-12-27 22:51:12,487	[INFO]	==== START: BestImprovementNoTabu ====
2023-12-27 22:51:13,291	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 15))
2023-12-27 22:51:13,292	[INFO]	1       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:13,800	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 16))
2023-12-27 22:51:13,801	[INFO]	2       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:14,318	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 11))
2023-12-27 22:51:14,319	[INFO]	3       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:14,887	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 18))
2023-12-27 22:51:14,888	[INFO]	4       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:15,448	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 8))
2023-12-27 22:51:15,449	[INFO]	5       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:16,037	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 1))
2023-12-27 22:51:16,037	[INFO]	6       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:16,579	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 7))
2023-12-27 22:51:16,580	[INFO]	7       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:17,192	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:51:17,192	[INFO]	8       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:17,721	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 9))
2023-12-27 22:51:17,721	[INFO]	9       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:18,274	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 19))
2023-12-27 22:51:18,275	[INFO]	10      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:18,971	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 1))
2023-12-27 22:51:18,971	[INFO]	11      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:21,482	[DEBUG]	EXEC>  SUCCESS 1202336
2023-12-27 22:51:21,482	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-27 22:51:21,483	[INFO]	12      SUCCESS              *1202336 (99.84%) [1 edit(s)] 
2023-12-27 22:51:21,484	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-27 22:51:24,109	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 16), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-27 22:51:24,109	[INFO]	13      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:26,819	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-27 22:51:26,820	[INFO]	14      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:29,485	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-27 22:51:29,486	[INFO]	15      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:29,488	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-27 22:51:29,488	[INFO]	16      SUCCESS               1202336 (99.84%) [1 edit(s)] 
2023-12-27 22:51:31,979	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 2), ('triangle.cpp.xml', 'stmt', 14))
2023-12-27 22:51:31,979	[INFO]	17      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:34,675	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 10))
2023-12-27 22:51:34,676	[INFO]	18      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:37,378	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-27 22:51:37,378	[INFO]	19      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-27 22:51:38,101	[DEBUG]	DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-27 22:51:38,102	[INFO]	20      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-27 22:51:40,725	[DEBUG]	EXEC>  SUCCESS 1201843
2023-12-27 22:51:40,726	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-27 22:51:40,726	[INFO]	21      SUCCESS              *1201843 (99.8%) [1 edit(s)] 
2023-12-27 22:51:40,728	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-27 22:51:43,159	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-27 22:51:43,160	[INFO]	22      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:51:45,839	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-27 22:51:45,840	[INFO]	23      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:51:48,570	[DEBUG]	EXEC>  SUCCESS 1201830
2023-12-27 22:51:48,571	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-27 22:51:48,571	[INFO]	24      SUCCESS              *1201830 (99.8%) [2 edit(s)] 
2023-12-27 22:51:48,572	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,13 +2,13 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-27 22:51:51,177	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-27 22:51:51,178	[INFO]	25      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:51:53,616	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-27 22:51:53,616	[INFO]	26      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:51:53,618	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-27 22:51:53,618	[INFO]	27      SUCCESS               1201843 (99.8%) [2 edit(s)] 
2023-12-27 22:51:54,327	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-27 22:51:54,328	[INFO]	28      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-27 22:51:56,777	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-27 22:51:56,777	[INFO]	29      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:51:59,366	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-27 22:51:59,366	[INFO]	30      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:02,029	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 7), ('triangle.cpp.xml', 'stmt', 7))
2023-12-27 22:52:02,029	[INFO]	31      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:04,619	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-27 22:52:04,620	[INFO]	32      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:07,208	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-27 22:52:07,208	[INFO]	33      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:09,816	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-27 22:52:09,817	[INFO]	34      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:12,394	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-27 22:52:12,394	[INFO]	35      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:14,448	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-27 22:52:14,448	[INFO]	36      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-27 22:52:14,450	[INFO]	==== END ====
2023-12-27 22:52:14,450	[INFO]	
2023-12-27 22:52:14,450	[INFO]	==== REPORT ====
2023-12-27 22:52:14,450	[INFO]	Termination: time budget
2023-12-27 22:52:14,451	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1703717468.log
2023-12-27 22:52:14,452	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1703717468.patch
2023-12-27 22:52:14,452	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1703717468.diff
2023-12-27 22:52:14,452	[INFO]	Best fitness: 1201830
2023-12-27 22:52:14,452	[INFO]	Best patch: ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-27 22:52:14,452	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,13 +2,13 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {


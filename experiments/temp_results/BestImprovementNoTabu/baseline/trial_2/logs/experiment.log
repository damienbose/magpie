2023-12-21 09:30:36,729	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 2
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results/BestImprovementNoTabu/baseline/trial_2
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = BestImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = UniformSelector

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-21 09:30:36,734	[INFO]	==== WARMUP ====
2023-12-21 09:30:39,274	[DEBUG]	EXEC>  SUCCESS 1205551
2023-12-21 09:30:39,274	[INFO]	WARM    SUCCESS               1205551                 
2023-12-21 09:30:40,236	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:30:40,237	[INFO]	WARM    SUCCESS               1205550                 
2023-12-21 09:30:41,197	[DEBUG]	EXEC>  SUCCESS 1205551
2023-12-21 09:30:41,198	[INFO]	WARM    SUCCESS               1205551                 
2023-12-21 09:30:42,149	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:30:42,149	[INFO]	WARM    SUCCESS               1205550                 
2023-12-21 09:30:43,098	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:30:43,098	[INFO]	WARM    SUCCESS               1205550                 
2023-12-21 09:30:43,099	[INFO]	INITIAL SUCCESS               1205550                 
2023-12-21 09:30:43,100	[INFO]	==== START: BestImprovementNoTabu ====
2023-12-21 09:30:43,284	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:30:43,284	[INFO]	1       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:30:44,078	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 6), ('triangle.cpp.xml', 'stmt', 17))
2023-12-21 09:30:44,079	[INFO]	2       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:45,071	[DEBUG]	EXEC>  SUCCESS 1205289
2023-12-21 09:30:45,072	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 1))
2023-12-21 09:30:45,072	[INFO]	3       SUCCESS              *1205289 (99.98%) [1 edit(s)] 
2023-12-21 09:30:45,074	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -17,11 +17,7 @@
     b = tmp;
   }
 
-  if(a > c) {
-    tmp = a;
-    a = c;
-    c = tmp;
-  }
+  
 
   if(b > c) {
     tmp = b;

2023-12-21 09:30:46,027	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:30:46,028	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 16))
2023-12-21 09:30:46,028	[INFO]	4       SUCCESS               1205550 (100.0%) [1 edit(s)] 
2023-12-21 09:30:46,796	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 2))
2023-12-21 09:30:46,796	[INFO]	5       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:47,759	[DEBUG]	EXEC>  SUCCESS 1205580
2023-12-21 09:30:47,760	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 12), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:30:47,760	[INFO]	6       SUCCESS               1205580 (100.0%) [1 edit(s)] 
2023-12-21 09:30:48,585	[DEBUG]	ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-21 09:30:48,585	[INFO]	7       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:49,575	[DEBUG]	EXEC>  SUCCESS 1205551
2023-12-21 09:30:49,576	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:30:49,576	[INFO]	8       SUCCESS               1205551 (100.0%) [1 edit(s)] 
2023-12-21 09:30:50,645	[DEBUG]	EXEC>  SUCCESS 1205596
2023-12-21 09:30:50,645	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:30:50,646	[INFO]	9       SUCCESS               1205596 (100.0%) [1 edit(s)] 
2023-12-21 09:30:51,499	[DEBUG]	EXEC>  SUCCESS 1203155
2023-12-21 09:30:51,499	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-21 09:30:51,500	[INFO]	10      SUCCESS              *1203155 (99.8%) [1 edit(s)] 
2023-12-21 09:30:51,501	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:30:52,480	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:30:52,481	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:30:52,482	[INFO]	11      SUCCESS               1205550 (100.0%) [1 edit(s)] 
2023-12-21 09:30:53,268	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 1))
2023-12-21 09:30:53,268	[INFO]	12      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:53,416	[DEBUG]	DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:30:53,416	[INFO]	13      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-21 09:30:54,212	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 16))
2023-12-21 09:30:54,212	[INFO]	14      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:55,208	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:30:55,208	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'return', 1))
2023-12-21 09:30:55,209	[INFO]	15      SUCCESS               1205550 (100.0%) [1 edit(s)] 
2023-12-21 09:30:55,960	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 2))
2023-12-21 09:30:55,960	[INFO]	16      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:56,751	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-21 09:30:56,751	[INFO]	17      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:57,549	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-21 09:30:57,550	[INFO]	18      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:58,377	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-21 09:30:58,378	[INFO]	19      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:30:59,180	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 6))
2023-12-21 09:30:59,180	[INFO]	20      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-21 09:31:00,155	[DEBUG]	EXEC>  SUCCESS 1205550
2023-12-21 09:31:00,156	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:00,157	[INFO]	21      SUCCESS              +1205550 (100.0%) [1 edit(s)] 
2023-12-21 09:31:00,158	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -15,6 +15,7 @@
     tmp = a;
     a = b;
     b = tmp;
+    double tmp;
   }
 
   if(a > c) {

2023-12-21 09:31:00,975	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 5))
2023-12-21 09:31:00,975	[INFO]	22      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:01,864	[DEBUG]	EXEC>  SUCCESS 1203282
2023-12-21 09:31:01,865	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 1), ('triangle.cpp.xml', 'stmt', 0))
2023-12-21 09:31:01,865	[INFO]	23      SUCCESS               1203282 (99.81%) [2 edit(s)] 
2023-12-21 09:31:02,032	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:02,032	[INFO]	24      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:31:02,802	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 16), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:02,802	[INFO]	25      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:02,961	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-21 09:31:02,962	[INFO]	26      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:31:03,097	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 3))
2023-12-21 09:31:03,097	[INFO]	27      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:31:03,872	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 3), ('triangle.cpp.xml', 'stmt', 4))
2023-12-21 09:31:03,873	[INFO]	28      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:04,014	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:04,015	[INFO]	29      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:31:04,798	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 2), ('triangle.cpp.xml', 'stmt', 16))
2023-12-21 09:31:04,798	[INFO]	30      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:05,580	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 6), ('triangle.cpp.xml', 'stmt', 22))
2023-12-21 09:31:05,580	[INFO]	31      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:06,346	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-21 09:31:06,346	[INFO]	32      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:06,497	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:06,497	[INFO]	33      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:31:07,256	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 9))
2023-12-21 09:31:07,256	[INFO]	34      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:07,554	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 6))
2023-12-21 09:31:07,555	[INFO]	35      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-21 09:31:08,329	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-21 09:31:08,329	[INFO]	36      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:09,119	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 16))
2023-12-21 09:31:09,119	[INFO]	37      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:10,024	[DEBUG]	EXEC>  SUCCESS 1203209
2023-12-21 09:31:10,025	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-21 09:31:10,026	[INFO]	38      SUCCESS               1203209 (99.81%) [2 edit(s)] 
2023-12-21 09:31:10,819	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 2))
2023-12-21 09:31:10,819	[INFO]	39      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:11,769	[DEBUG]	EXEC>  SUCCESS 1203185
2023-12-21 09:31:11,770	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 21), ('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-21 09:31:11,770	[INFO]	40      SUCCESS               1203185 (99.8%) [2 edit(s)] 
2023-12-21 09:31:12,549	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-21 09:31:12,549	[INFO]	41      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-21 09:31:13,323	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 10), ('triangle.cpp.xml', 'stmt', 20))
2023-12-21 09:31:13,323	[INFO]	42      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:13,325	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -26,7 +26,7 @@
   if(b > c) {
     tmp = b;
     b = c;
-    c = tmp;
+    return EQUILATERAL;
   }
 
   if(a + b <= c)

2023-12-21 09:31:14,098	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 2))
2023-12-21 09:31:14,098	[INFO]	43      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:14,099	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -23,11 +23,7 @@
     c = tmp;
   }
 
-  if(b > c) {
-    tmp = b;
-    b = c;
-    c = tmp;
-  }
+  
 
   if(a + b <= c)
     /*auto*/{

2023-12-21 09:31:14,928	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 19))
2023-12-21 09:31:14,929	[INFO]	44      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:14,931	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -37,9 +37,6 @@
     /*auto*/{
       return EQUILATERAL;
     }/*auto*/
-  if(a == b || b == c)
-    /*auto*/{
-      return ISOSCELES;
-    }/*auto*/
+  return INVALID;
   return SCALENE;
 }

2023-12-21 09:31:15,737	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-21 09:31:15,737	[INFO]	45      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:15,738	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -26,7 +26,7 @@
   if(b > c) {
     tmp = b;
     b = c;
-    c = tmp;
+    
   }
 
   if(a + b <= c)

2023-12-21 09:31:16,544	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 2), ('triangle.cpp.xml', 'stmt', 14))
2023-12-21 09:31:16,544	[INFO]	46      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:16,546	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,11 +8,15 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
-    tmp = a;
+    if(a > c) {
+      tmp = a;
+      a = c;
+      c = tmp;
+    }
     a = b;
     b = tmp;
   }

2023-12-21 09:31:16,690	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 3), ('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-21 09:31:16,690	[INFO]	47      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:16,691	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,14 +1,15 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  const struct timespec ms = {0, (long int) (0.001*1e9)}a = c;
+  ; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:17,518	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 7), ('triangle.cpp.xml', 'stmt', 17))
2023-12-21 09:31:17,518	[INFO]	48      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:17,520	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -20,7 +20,10 @@
   if(a > c) {
     tmp = a;
     a = c;
-    c = tmp;
+    if(a == b && b == c)
+      /*auto*/{
+        return EQUILATERAL;
+      }/*auto*/
   }
 
   if(b > c) {

2023-12-21 09:31:18,366	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 4), ('triangle.cpp.xml', 'stmt', 1))
2023-12-21 09:31:18,366	[INFO]	49      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:18,368	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,13 +8,13 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
     tmp = a;
     a = b;
-    b = tmp;
+    double tmp;
   }
 
   if(a > c) {

2023-12-21 09:31:19,278	[DEBUG]	EXEC>  SUCCESS 1203281
2023-12-21 09:31:19,279	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-21 09:31:19,280	[INFO]	50      SUCCESS              +1203281 (99.81%) [2 edit(s)] 
2023-12-21 09:31:19,281	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -22,6 +22,7 @@
     a = c;
     c = tmp;
   }
+  tmp = b;
 
   if(b > c) {
     tmp = b;

2023-12-21 09:31:19,441	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:19,441	[INFO]	51      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:19,443	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,14 +1,14 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+   //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:20,192	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 12))
2023-12-21 09:31:20,192	[INFO]	52      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:20,194	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -37,9 +37,6 @@
     /*auto*/{
       return EQUILATERAL;
     }/*auto*/
-  if(a == b || b == c)
-    /*auto*/{
-      return ISOSCELES;
-    }/*auto*/
+  c = tmp;
   return SCALENE;
 }

2023-12-21 09:31:21,059	[DEBUG]	EXEC>  SUCCESS 1203216
2023-12-21 09:31:21,060	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:21,060	[INFO]	53      SUCCESS              +1203216 (99.81%) [2 edit(s)] 
2023-12-21 09:31:21,062	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -27,6 +27,7 @@
     tmp = b;
     b = c;
     c = tmp;
+    const struct timespec ms = {0, (long int) (0.001*1e9)};
   }
 
   if(a + b <= c)

2023-12-21 09:31:21,876	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 15))
2023-12-21 09:31:21,876	[INFO]	54      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:21,877	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -39,7 +39,11 @@
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{
-      return ISOSCELES;
+      if(b > c) {
+        tmp = b;
+        b = c;
+        c = tmp;
+      }
     }/*auto*/
   return SCALENE;
 }

2023-12-21 09:31:22,721	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-21 09:31:22,722	[INFO]	55      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:22,722	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -35,7 +35,7 @@
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
-      return EQUILATERAL;
+      
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-21 09:31:23,511	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'return', 3))
2023-12-21 09:31:23,511	[INFO]	56      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:23,512	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -31,6 +31,7 @@
 
   if(a + b <= c)
     /*auto*/{
+      return SCALENE;
       return INVALID;
     }/*auto*/
   if(a == b && b == c)

2023-12-21 09:31:24,307	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 3))
2023-12-21 09:31:24,307	[INFO]	57      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:24,308	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -41,5 +41,5 @@
     /*auto*/{
       return ISOSCELES;
     }/*auto*/
-  return SCALENE;
+  
 }

2023-12-21 09:31:25,174	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 14))
2023-12-21 09:31:25,174	[INFO]	58      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:25,176	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -39,7 +39,11 @@
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{
-      return ISOSCELES;
+      if(a > c) {
+        tmp = a;
+        a = c;
+        c = tmp;
+      }
     }/*auto*/
   return SCALENE;
 }

2023-12-21 09:31:26,084	[DEBUG]	EXEC>  SUCCESS 1203185
2023-12-21 09:31:26,085	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:26,086	[INFO]	59      SUCCESS              +1203185 (99.8%) [2 edit(s)] 
2023-12-21 09:31:26,088	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -19,6 +19,7 @@
 
   if(a > c) {
     tmp = a;
+    const struct timespec ms = {0, (long int) (0.001*1e9)};
     a = c;
     c = tmp;
   }

2023-12-21 09:31:26,255	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 5))
2023-12-21 09:31:26,256	[INFO]	60      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:26,258	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,14 +1,14 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  a = b; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:27,038	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-21 09:31:27,038	[INFO]	61      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:27,040	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -35,7 +35,7 @@
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
-      return EQUILATERAL;
+      
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-21 09:31:27,848	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 22))
2023-12-21 09:31:27,848	[INFO]	62      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:27,850	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -37,9 +37,6 @@
     /*auto*/{
       return EQUILATERAL;
     }/*auto*/
-  if(a == b || b == c)
-    /*auto*/{
-      return ISOSCELES;
-    }/*auto*/
+  return SCALENE;
   return SCALENE;
 }

2023-12-21 09:31:28,030	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 9), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:28,031	[INFO]	63      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:28,032	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -28,6 +28,7 @@
     b = c;
     c = tmp;
   }
+  double tmp;
 
   if(a + b <= c)
     /*auto*/{

2023-12-21 09:31:28,834	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'return', 3))
2023-12-21 09:31:28,834	[INFO]	64      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:28,836	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -19,6 +19,7 @@
 
   if(a > c) {
     tmp = a;
+    return SCALENE;
     a = c;
     c = tmp;
   }

2023-12-21 09:31:28,999	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:29,000	[INFO]	65      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:29,001	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,14 +1,14 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+   //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:29,925	[DEBUG]	EXEC>  SUCCESS 1203266
2023-12-21 09:31:29,926	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'if', 3))
2023-12-21 09:31:29,926	[INFO]	66      SUCCESS              +1203266 (99.81%) [2 edit(s)] 
2023-12-21 09:31:29,928	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -7,8 +7,12 @@
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
+  if(a + b <= c)
+    /*auto*/{
+      return INVALID;
+    }/*auto*/
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:30,818	[DEBUG]	EXEC>  SUCCESS 1203182
2023-12-21 09:31:30,819	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 28), ('triangle.cpp.xml', 'if', 0))
2023-12-21 09:31:30,819	[INFO]	67      SUCCESS              +1203182 (99.8%) [2 edit(s)] 
2023-12-21 09:31:30,822	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -35,6 +35,11 @@
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
+      if(a > b) {
+        tmp = a;
+        a = b;
+        b = tmp;
+      }
       return EQUILATERAL;
     }/*auto*/
   if(a == b || b == c)

2023-12-21 09:31:30,979	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 3), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:30,980	[INFO]	68      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:30,981	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,14 +1,15 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  const struct timespec ms = {0, (long int) (0.001*1e9)}double tmp;
+  ; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:31,854	[DEBUG]	EXEC>  SUCCESS 1203216
2023-12-21 09:31:31,854	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 23), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-21 09:31:31,855	[INFO]	69      SUCCESS              +1203216 (99.81%) [2 edit(s)] 
2023-12-21 09:31:31,856	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -25,6 +25,7 @@
 
   if(b > c) {
     tmp = b;
+    b = c;
     b = c;
     c = tmp;
   }

2023-12-21 09:31:31,991	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:31,992	[INFO]	70      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:31,993	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -22,6 +22,7 @@
     a = c;
     c = tmp;
   }
+  double tmp;
 
   if(b > c) {
     tmp = b;

2023-12-21 09:31:32,123	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:32,123	[INFO]	71      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:32,124	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -6,9 +6,9 @@
 }
 
 int classify_triangle(double a, double b, double c) {
-  double tmp;
+  
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:32,987	[DEBUG]	EXEC>  SUCCESS 1203280
2023-12-21 09:31:32,988	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 9), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:32,989	[INFO]	72      SUCCESS              +1203280 (99.81%) [2 edit(s)] 
2023-12-21 09:31:32,990	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -28,6 +28,7 @@
     b = c;
     c = tmp;
   }
+  const struct timespec ms = {0, (long int) (0.001*1e9)};
 
   if(a + b <= c)
     /*auto*/{

2023-12-21 09:31:33,141	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'return', 3))
2023-12-21 09:31:33,141	[INFO]	73      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-21 09:31:33,143	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,6 +1,7 @@
 #include "triangle.hpp"
 
 void delay() {
+  return SCALENE;
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
@@ -8,7 +9,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:33,936	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-21 09:31:33,937	[INFO]	74      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:33,939	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -35,7 +35,7 @@
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
-      return EQUILATERAL;
+      b = tmp;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-21 09:31:34,738	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-21 09:31:34,738	[INFO]	75      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-21 09:31:34,739	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -31,7 +31,7 @@
 
   if(a + b <= c)
     /*auto*/{
-      return INVALID;
+      
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{

2023-12-21 09:31:35,628	[DEBUG]	EXEC>  SUCCESS 1203142
2023-12-21 09:31:35,629	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-21 09:31:35,630	[INFO]	76      SUCCESS              *1203142 (99.8%) [2 edit(s)] 
2023-12-21 09:31:35,631	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,13 +2,13 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-21 09:31:36,426	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-21 09:31:36,426	[INFO]	77      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:31:37,185	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 23), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-21 09:31:37,185	[INFO]	78      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:31:38,014	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-21 09:31:38,014	[INFO]	79      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:31:38,016	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 18))
2023-12-21 09:31:38,016	[INFO]	80      SUCCESS               1203142 (99.8%) [3 edit(s)] 
2023-12-21 09:31:38,846	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-21 09:31:38,846	[INFO]	81      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:31:38,987	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 16))
2023-12-21 09:31:38,987	[INFO]	82      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:31:39,867	[DEBUG]	EXEC>  SUCCESS 1203196
2023-12-21 09:31:39,867	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-21 09:31:39,868	[INFO]	83      SUCCESS               1203196 (99.8%) [3 edit(s)] 
2023-12-21 09:31:40,770	[DEBUG]	EXEC>  SUCCESS 1203213
2023-12-21 09:31:40,771	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'if', 1))
2023-12-21 09:31:40,772	[INFO]	84      SUCCESS               1203213 (99.81%) [3 edit(s)] 
2023-12-21 09:31:40,949	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 3))
2023-12-21 09:31:40,949	[INFO]	85      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-21 09:31:41,732	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 4))
2023-12-21 09:31:41,733	[INFO]	86      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:31:42,564	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 5))
2023-12-21 09:31:42,565	[INFO]	87      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-21 09:31:43,494	[DEBUG]	EXEC>  SUCCESS 1203320
2023-12-21 09:31:43,495	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 23), ('triangle.cpp.xml', 'if', 4))
2023-12-21 09:31:43,496	[INFO]	88      SUCCESS               1203320 (99.82%) [3 edit(s)] 
2023-12-21 09:31:43,497	[INFO]	==== END ====
2023-12-21 09:31:43,497	[INFO]	
2023-12-21 09:31:43,497	[INFO]	==== REPORT ====
2023-12-21 09:31:43,498	[INFO]	Termination: time budget
2023-12-21 09:31:43,499	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1703151036.log
2023-12-21 09:31:43,500	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1703151036.patch
2023-12-21 09:31:43,500	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1703151036.diff
2023-12-21 09:31:43,500	[INFO]	Best fitness: 1203142
2023-12-21 09:31:43,501	[INFO]	Best patch: ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-21 09:31:43,502	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,13 +2,13 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {


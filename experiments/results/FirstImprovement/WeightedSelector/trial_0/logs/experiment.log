2023-12-14 14:38:50,739	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 1737049026662522
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = time

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 1
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = WeightedSelector
initial_weights = 
	0
	0
	0
	0
	0
	0
	0
	0
	0
	1
	0
	0

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-14 14:38:50,744	[INFO]	==== WARMUP ====
2023-12-14 14:38:53,355	[DEBUG]	EXEC>  SUCCESS 0.098
2023-12-14 14:38:53,355	[INFO]	WARM    SUCCESS               0.098                   
2023-12-14 14:38:53,356	[INFO]	INITIAL SUCCESS               0.098                   
2023-12-14 14:38:53,356	[INFO]	==== START: FirstImprovement ====
2023-12-14 14:38:54,198	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:38:54,198	[INFO]	1       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-14 14:38:55,005	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:38:55,005	[INFO]	2       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-14 14:38:55,833	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:38:55,833	[INFO]	3       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-14 14:38:56,683	[DEBUG]	EXEC>  SUCCESS 0.0235
2023-12-14 14:38:56,683	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:38:56,684	[INFO]	4       SUCCESS              *0.0235 (23.98%) [1 edit(s)] 
2023-12-14 14:38:56,685	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:38:57,684	[DEBUG]	EXEC>  SUCCESS 0.1058
2023-12-14 14:38:57,686	[DEBUG]	
2023-12-14 14:38:57,686	[INFO]	5       SUCCESS               0.1058 (107.96%) [0 edit(s)] 
2023-12-14 14:38:58,497	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:38:58,497	[INFO]	6       TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:38:59,317	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:38:59,318	[INFO]	7       TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:00,134	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:00,135	[INFO]	8       TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:00,915	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:00,915	[INFO]	9       TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:01,751	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:01,751	[INFO]	10      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:02,682	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:02,682	[INFO]	11      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:03,532	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:03,532	[INFO]	12      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:04,377	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:39:04,377	[INFO]	13      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:05,225	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:05,225	[INFO]	14      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:06,059	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:06,060	[INFO]	15      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:06,870	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-14 14:39:06,870	[INFO]	16      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:07,701	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-14 14:39:07,702	[INFO]	17      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:08,516	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:08,516	[INFO]	18      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:09,373	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:39:09,373	[INFO]	19      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:10,225	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:10,225	[INFO]	20      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:11,081	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:11,082	[INFO]	21      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:11,951	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-14 14:39:11,952	[INFO]	22      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:12,803	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:12,804	[INFO]	23      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:13,681	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:39:13,681	[INFO]	24      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:14,549	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:14,549	[INFO]	25      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:15,370	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-14 14:39:15,371	[INFO]	26      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:16,267	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:16,267	[INFO]	27      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:17,096	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:17,096	[INFO]	28      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:17,920	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:17,920	[INFO]	29      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:18,761	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:18,762	[INFO]	30      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:19,598	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:19,599	[INFO]	31      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:20,445	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-14 14:39:20,446	[INFO]	32      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:21,257	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:21,258	[INFO]	33      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:22,061	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:22,061	[INFO]	34      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:22,896	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-14 14:39:22,896	[INFO]	35      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:23,736	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-14 14:39:23,736	[INFO]	36      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:24,610	[DEBUG]	EXEC>  SUCCESS 0.0301
2023-12-14 14:39:24,610	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-14 14:39:24,610	[INFO]	37      SUCCESS               0.0301 (30.71%) [2 edit(s)] 
2023-12-14 14:39:24,612	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:24,612	[INFO]	38      SUCCESS              +0.0235 (23.98%) [2 edit(s)] 
2023-12-14 14:39:24,613	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:24,614	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:24,614	[INFO]	39      SUCCESS              +0.0235 (23.98%) [1 edit(s)] 
2023-12-14 14:39:24,615	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:24,615	[DEBUG]	
2023-12-14 14:39:24,616	[INFO]	40      SUCCESS               0.1058 (107.96%) [0 edit(s)] 
2023-12-14 14:39:25,433	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-14 14:39:25,433	[INFO]	41      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:26,249	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:26,249	[INFO]	42      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:27,099	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:27,100	[INFO]	43      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:27,944	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-14 14:39:27,944	[INFO]	44      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:28,778	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:28,779	[INFO]	45      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:29,611	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-14 14:39:29,612	[INFO]	46      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:30,433	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-14 14:39:30,433	[INFO]	47      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:31,252	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:31,252	[INFO]	48      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:32,046	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-14 14:39:32,047	[INFO]	49      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:32,873	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:32,874	[INFO]	50      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:32,875	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-14 14:39:32,875	[INFO]	51      SUCCESS               0.0301 (30.71%) [2 edit(s)] 
2023-12-14 14:39:33,718	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:33,718	[INFO]	52      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:34,539	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:34,540	[INFO]	53      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:34,541	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:34,541	[INFO]	54      SUCCESS              +0.0235 (23.98%) [2 edit(s)] 
2023-12-14 14:39:34,542	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:34,543	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-14 14:39:34,543	[INFO]	55      SUCCESS               0.0301 (30.71%) [3 edit(s)] 
2023-12-14 14:39:34,543	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:34,543	[INFO]	56      SUCCESS              +0.0235 (23.98%) [1 edit(s)] 
2023-12-14 14:39:34,544	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:35,336	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-14 14:39:35,337	[INFO]	57      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:35,338	[DEBUG]	
2023-12-14 14:39:35,338	[INFO]	58      SUCCESS               0.1058 (107.96%) [0 edit(s)] 
2023-12-14 14:39:36,141	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:36,142	[INFO]	59      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:36,968	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:36,969	[INFO]	60      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:37,805	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:37,806	[INFO]	61      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:38,634	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:38,635	[INFO]	62      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:39,449	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:39,449	[INFO]	63      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:40,300	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:39:40,300	[INFO]	64      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:40,302	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-14 14:39:40,302	[INFO]	65      SUCCESS               0.0301 (30.71%) [2 edit(s)] 
2023-12-14 14:39:41,125	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:41,126	[INFO]	66      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:41,977	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:41,977	[INFO]	67      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:42,795	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-14 14:39:42,795	[INFO]	68      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:42,797	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:42,797	[INFO]	69      SUCCESS              +0.0235 (23.98%) [2 edit(s)] 
2023-12-14 14:39:42,798	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:42,799	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:42,799	[INFO]	70      SUCCESS              +0.0235 (23.98%) [1 edit(s)] 
2023-12-14 14:39:42,800	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:42,801	[DEBUG]	
2023-12-14 14:39:42,801	[INFO]	71      SUCCESS               0.1058 (107.96%) [0 edit(s)] 
2023-12-14 14:39:43,622	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:39:43,622	[INFO]	72      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:44,441	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:44,441	[INFO]	73      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:45,287	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:45,288	[INFO]	74      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:45,289	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-14 14:39:45,289	[INFO]	75      SUCCESS               0.0301 (30.71%) [2 edit(s)] 
2023-12-14 14:39:46,114	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-14 14:39:46,114	[INFO]	76      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:46,906	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:46,907	[INFO]	77      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:46,908	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-14 14:39:46,908	[INFO]	78      SUCCESS               0.0301 (30.71%) [2 edit(s)] 
2023-12-14 14:39:47,761	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:47,761	[INFO]	79      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:48,606	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-14 14:39:48,606	[INFO]	80      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:49,456	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-14 14:39:49,456	[INFO]	81      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:50,295	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:50,296	[INFO]	82      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:50,297	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:50,297	[INFO]	83      SUCCESS              +0.0235 (23.98%) [2 edit(s)] 
2023-12-14 14:39:50,298	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:51,118	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 6))
2023-12-14 14:39:51,119	[INFO]	84      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-14 14:39:51,991	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:51,991	[INFO]	85      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-14 14:39:52,840	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-14 14:39:52,841	[INFO]	86      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-14 14:39:52,842	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:52,842	[INFO]	87      SUCCESS              +0.0235 (23.98%) [1 edit(s)] 
2023-12-14 14:39:52,843	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-14 14:39:52,843	[DEBUG]	
2023-12-14 14:39:52,844	[INFO]	88      SUCCESS               0.1058 (107.96%) [0 edit(s)] 
2023-12-14 14:39:53,668	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-14 14:39:53,669	[INFO]	89      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-14 14:39:53,670	[INFO]	==== END ====
2023-12-14 14:39:53,670	[INFO]	
2023-12-14 14:39:53,670	[INFO]	==== REPORT ====
2023-12-14 14:39:53,671	[INFO]	Termination: time budget
2023-12-14 14:39:53,671	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1702564730.log
2023-12-14 14:39:53,673	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1702564730.patch
2023-12-14 14:39:53,673	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1702564730.diff
2023-12-14 14:39:53,673	[INFO]	Best fitness: 0.0235
2023-12-14 14:39:53,674	[INFO]	Best patch: ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-14 14:39:53,675	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {


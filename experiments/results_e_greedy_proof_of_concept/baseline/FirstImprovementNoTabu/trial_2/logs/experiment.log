2023-12-15 02:44:51,195	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 2
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results_e_greedy_proof_of_concept/baseline/FirstImprovementNoTabu/trial_2
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = UniformSelector

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-15 02:44:51,200	[INFO]	==== WARMUP ====
2023-12-15 02:44:53,880	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:44:53,881	[INFO]	WARM    SUCCESS               1204240                 
2023-12-15 02:44:54,881	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:44:54,881	[INFO]	WARM    SUCCESS               1204239                 
2023-12-15 02:44:55,877	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:44:55,878	[INFO]	WARM    SUCCESS               1204239                 
2023-12-15 02:44:56,914	[DEBUG]	EXEC>  SUCCESS 1328456
2023-12-15 02:44:56,914	[INFO]	WARM    SUCCESS               1328456                 
2023-12-15 02:44:57,935	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:44:57,935	[INFO]	WARM    SUCCESS               1204240                 
2023-12-15 02:44:57,936	[INFO]	INITIAL SUCCESS               1204240                 
2023-12-15 02:44:57,937	[INFO]	==== START: FirstImprovementNoTabu ====
2023-12-15 02:44:58,714	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 23), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:44:58,715	[INFO]	1       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:44:59,509	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 7))
2023-12-15 02:44:59,510	[INFO]	2       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:45:00,490	[DEBUG]	EXEC>  SUCCESS 1250366
2023-12-15 02:45:00,491	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'if', 4))
2023-12-15 02:45:00,492	[INFO]	3       SUCCESS               1250366 (103.83%) [1 edit(s)] 
2023-12-15 02:45:01,530	[DEBUG]	EXEC>  SUCCESS 1297661
2023-12-15 02:45:01,531	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'if', 3))
2023-12-15 02:45:01,531	[INFO]	4       SUCCESS               1297661 (107.76%) [1 edit(s)] 
2023-12-15 02:45:01,692	[DEBUG]	DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:01,693	[INFO]	5       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:45:02,662	[DEBUG]	EXEC>  SUCCESS 1204269
2023-12-15 02:45:02,663	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:02,664	[INFO]	6       SUCCESS               1204269 (100.0%) [1 edit(s)] 
2023-12-15 02:45:03,670	[DEBUG]	EXEC>  SUCCESS 1203870
2023-12-15 02:45:03,670	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0))
2023-12-15 02:45:03,671	[INFO]	7       SUCCESS              *1203870 (99.97%) [1 edit(s)] 
2023-12-15 02:45:03,672	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;

2023-12-15 02:45:03,826	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:03,827	[INFO]	8       COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:45:04,630	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'if', 2))
2023-12-15 02:45:04,630	[INFO]	9       TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:45:04,632	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-15 02:45:04,632	[INFO]	10      SUCCESS              +1203870 (99.97%) [2 edit(s)] 
2023-12-15 02:45:04,632	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;

2023-12-15 02:45:05,440	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 7))
2023-12-15 02:45:05,440	[INFO]	11      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:05,586	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:05,586	[INFO]	12      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:05,716	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 13))
2023-12-15 02:45:05,717	[INFO]	13      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:06,674	[DEBUG]	EXEC>  SUCCESS 1203918
2023-12-15 02:45:06,675	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 21), ('triangle.cpp.xml', 'if', 3))
2023-12-15 02:45:06,676	[INFO]	14      SUCCESS               1203918 (99.97%) [3 edit(s)] 
2023-12-15 02:45:06,837	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:06,837	[INFO]	15      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:06,989	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:06,989	[INFO]	16      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:07,976	[DEBUG]	EXEC>  SUCCESS 1203920
2023-12-15 02:45:07,976	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:45:07,977	[INFO]	17      SUCCESS               1203920 (99.97%) [3 edit(s)] 
2023-12-15 02:45:08,771	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:45:08,772	[INFO]	18      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:09,566	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:09,567	[INFO]	19      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:10,341	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 21), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:45:10,341	[INFO]	20      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:10,477	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:45:10,477	[INFO]	21      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:11,244	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 3))
2023-12-15 02:45:11,244	[INFO]	22      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:12,232	[DEBUG]	EXEC>  SUCCESS 1203925
2023-12-15 02:45:12,232	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:12,233	[INFO]	23      SUCCESS               1203925 (99.97%) [3 edit(s)] 
2023-12-15 02:45:13,061	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:45:13,062	[INFO]	24      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:13,856	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:45:13,856	[INFO]	25      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:14,863	[DEBUG]	EXEC>  SUCCESS 1203902
2023-12-15 02:45:14,863	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 22), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:45:14,864	[INFO]	26      SUCCESS               1203902 (99.97%) [3 edit(s)] 
2023-12-15 02:45:15,843	[DEBUG]	EXEC>  SUCCESS 1203998
2023-12-15 02:45:15,843	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:15,844	[INFO]	27      SUCCESS               1203998 (99.98%) [3 edit(s)] 
2023-12-15 02:45:16,036	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 5))
2023-12-15 02:45:16,036	[INFO]	28      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:16,834	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 28), ('triangle.cpp.xml', 'return', 3))
2023-12-15 02:45:16,835	[INFO]	29      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:17,688	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 3))
2023-12-15 02:45:17,689	[INFO]	30      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:17,842	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 6), ('triangle.cpp.xml', 'stmt', 2))
2023-12-15 02:45:17,842	[INFO]	31      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:45:18,602	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 11))
2023-12-15 02:45:18,602	[INFO]	32      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:19,376	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-15 02:45:19,377	[INFO]	33      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:20,189	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:45:20,189	[INFO]	34      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:45:21,126	[DEBUG]	EXEC>  SUCCESS 1203870
2023-12-15 02:45:21,127	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:45:21,128	[INFO]	35      SUCCESS              +1203870 (99.97%) [3 edit(s)] 
2023-12-15 02:45:21,129	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:21,962	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 6), ('triangle.cpp.xml', 'stmt', 5))
2023-12-15 02:45:21,963	[INFO]	36      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:22,792	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 23), ('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-15 02:45:22,792	[INFO]	37      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:23,589	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ReturnReplacement(('triangle.cpp.xml', 'return', 3), ('triangle.cpp.xml', 'stmt', 14))
2023-12-15 02:45:23,590	[INFO]	38      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:24,566	[DEBUG]	EXEC>  SUCCESS 1203946
2023-12-15 02:45:24,566	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 12), ('triangle.cpp.xml', 'if', 3))
2023-12-15 02:45:24,567	[INFO]	39      SUCCESS               1203946 (99.98%) [4 edit(s)] 
2023-12-15 02:45:25,372	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 17))
2023-12-15 02:45:25,372	[INFO]	40      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:26,192	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | IfReplacement(('triangle.cpp.xml', 'if', 2), ('triangle.cpp.xml', 'stmt', 22))
2023-12-15 02:45:26,193	[INFO]	41      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:27,032	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | IfDeletion(('triangle.cpp.xml', 'if', 4))
2023-12-15 02:45:27,033	[INFO]	42      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:27,184	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:27,184	[INFO]	43      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:45:27,314	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 20))
2023-12-15 02:45:27,314	[INFO]	44      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:45:28,317	[DEBUG]	EXEC>  SUCCESS 1203918
2023-12-15 02:45:28,318	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:45:28,318	[INFO]	45      SUCCESS               1203918 (99.97%) [4 edit(s)] 
2023-12-15 02:45:29,145	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ReturnReplacement(('triangle.cpp.xml', 'return', 3), ('triangle.cpp.xml', 'stmt', 21))
2023-12-15 02:45:29,145	[INFO]	46      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:29,965	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:45:29,965	[INFO]	47      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:30,776	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 18))
2023-12-15 02:45:30,777	[INFO]	48      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:30,937	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:30,937	[INFO]	49      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:45:31,720	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:31,720	[INFO]	50      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:32,527	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 8))
2023-12-15 02:45:32,527	[INFO]	51      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:45:33,525	[DEBUG]	EXEC>  SUCCESS 1203869
2023-12-15 02:45:33,525	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-15 02:45:33,527	[INFO]	52      SUCCESS              *1203869 (99.97%) [4 edit(s)] 
2023-12-15 02:45:33,528	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:34,555	[DEBUG]	EXEC>  SUCCESS 1203870
2023-12-15 02:45:34,555	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'if', 2))
2023-12-15 02:45:34,556	[INFO]	53      SUCCESS               1203870 (99.97%) [5 edit(s)] 
2023-12-15 02:45:35,332	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | IfDeletion(('triangle.cpp.xml', 'if', 1))
2023-12-15 02:45:35,332	[INFO]	54      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:45:36,174	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-15 02:45:36,174	[INFO]	55      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:45:37,007	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-15 02:45:37,008	[INFO]	56      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:45:37,010	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:45:37,011	[INFO]	57      SUCCESS              +1203869 (99.97%) [5 edit(s)] 
2023-12-15 02:45:37,012	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:37,855	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 9), ('triangle.cpp.xml', 'stmt', 12))
2023-12-15 02:45:37,856	[INFO]	58      TEST_CODE_ERROR       None  [6 edit(s)]       
2023-12-15 02:45:38,831	[DEBUG]	EXEC>  SUCCESS 1203870
2023-12-15 02:45:38,831	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:38,832	[INFO]	59      SUCCESS               1203870 (99.97%) [6 edit(s)] 
2023-12-15 02:45:39,653	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 20))
2023-12-15 02:45:39,654	[INFO]	60      TEST_CODE_ERROR       None  [6 edit(s)]       
2023-12-15 02:45:39,805	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:39,805	[INFO]	61      COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-12-15 02:45:39,808	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3))
2023-12-15 02:45:39,808	[INFO]	62      SUCCESS              +1203869 (99.97%) [6 edit(s)] 
2023-12-15 02:45:39,810	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:40,736	[DEBUG]	EXEC>  SUCCESS 1203870
2023-12-15 02:45:40,737	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:40,738	[INFO]	63      SUCCESS               1203870 (99.97%) [7 edit(s)] 
2023-12-15 02:45:40,886	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'expr_stmt', 7))
2023-12-15 02:45:40,886	[INFO]	64      COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-12-15 02:45:41,842	[DEBUG]	EXEC>  SUCCESS 1203870
2023-12-15 02:45:41,843	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 4))
2023-12-15 02:45:41,844	[INFO]	65      SUCCESS               1203870 (99.97%) [7 edit(s)] 
2023-12-15 02:45:42,834	[DEBUG]	EXEC>  SUCCESS 1203901
2023-12-15 02:45:42,834	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:42,835	[INFO]	66      SUCCESS               1203901 (99.97%) [7 edit(s)] 
2023-12-15 02:45:43,850	[DEBUG]	EXEC>  SUCCESS 1403583
2023-12-15 02:45:43,850	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:43,851	[INFO]	67      SUCCESS               1403583 (116.55%) [7 edit(s)] 
2023-12-15 02:45:44,016	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:44,016	[INFO]	68      COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-12-15 02:45:44,818	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'return', 2))
2023-12-15 02:45:44,818	[INFO]	69      TEST_CODE_ERROR       None  [7 edit(s)]       
2023-12-15 02:45:44,820	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | IfReplacement(('triangle.cpp.xml', 'if', 4), ('triangle.cpp.xml', 'stmt', 17))
2023-12-15 02:45:44,821	[INFO]	70      SUCCESS               1203870 (99.97%) [7 edit(s)] 
2023-12-15 02:45:45,639	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | IfReplacement(('triangle.cpp.xml', 'if', 4), ('triangle.cpp.xml', 'stmt', 7))
2023-12-15 02:45:45,640	[INFO]	71      TEST_CODE_ERROR       None  [7 edit(s)]       
2023-12-15 02:45:45,776	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:45,777	[INFO]	72      COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-12-15 02:45:45,906	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 14))
2023-12-15 02:45:45,906	[INFO]	73      COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-12-15 02:45:46,682	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:45:46,682	[INFO]	74      TEST_CODE_ERROR       None  [7 edit(s)]       
2023-12-15 02:45:47,477	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:47,478	[INFO]	75      TEST_CODE_ERROR       None  [7 edit(s)]       
2023-12-15 02:45:48,417	[DEBUG]	EXEC>  SUCCESS 1201966
2023-12-15 02:45:48,417	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-15 02:45:48,418	[INFO]	76      SUCCESS              *1201966 (99.81%) [7 edit(s)] 
2023-12-15 02:45:48,420	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,7 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:49,293	[DEBUG]	EXEC>  SUCCESS 1201996
2023-12-15 02:45:49,293	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 12), ('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-15 02:45:49,294	[INFO]	77      SUCCESS               1201996 (99.81%) [8 edit(s)] 
2023-12-15 02:45:50,057	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-15 02:45:50,058	[INFO]	78      TEST_CODE_ERROR       None  [8 edit(s)]       
2023-12-15 02:45:50,967	[DEBUG]	EXEC>  SUCCESS 1201840
2023-12-15 02:45:50,967	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:50,968	[INFO]	79      SUCCESS              *1201840 (99.8%) [8 edit(s)] 
2023-12-15 02:45:50,970	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,8 +1,8 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   //tv_sec=0, tv_nsec (0.001 seconds)
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:51,757	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 3))
2023-12-15 02:45:51,758	[INFO]	80      TEST_CODE_ERROR       None  [9 edit(s)]       
2023-12-15 02:45:51,898	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 2))
2023-12-15 02:45:51,898	[INFO]	81      COMPILE_CODE_ERROR    None  [9 edit(s)]       
2023-12-15 02:45:52,672	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ReturnReplacement(('triangle.cpp.xml', 'return', 3), ('triangle.cpp.xml', 'stmt', 20))
2023-12-15 02:45:52,673	[INFO]	82      TEST_CODE_ERROR       None  [9 edit(s)]       
2023-12-15 02:45:53,428	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:53,428	[INFO]	83      TEST_CODE_ERROR       None  [9 edit(s)]       
2023-12-15 02:45:53,579	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'if', 2))
2023-12-15 02:45:53,580	[INFO]	84      COMPILE_CODE_ERROR    None  [9 edit(s)]       
2023-12-15 02:45:53,729	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 21))
2023-12-15 02:45:53,730	[INFO]	85      COMPILE_CODE_ERROR    None  [9 edit(s)]       
2023-12-15 02:45:53,734	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:53,734	[INFO]	86      SUCCESS              +1201840 (99.8%) [9 edit(s)] 
2023-12-15 02:45:53,738	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,8 +1,8 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   //tv_sec=0, tv_nsec (0.001 seconds)
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:53,740	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:45:53,740	[INFO]	87      SUCCESS              +1201840 (99.8%) [10 edit(s)] 
2023-12-15 02:45:53,742	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,8 +1,8 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   //tv_sec=0, tv_nsec (0.001 seconds)
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:54,528	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-15 02:45:54,529	[INFO]	88      TEST_CODE_ERROR       None  [11 edit(s)]      
2023-12-15 02:45:55,330	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-15 02:45:55,331	[INFO]	89      TEST_CODE_ERROR       None  [11 edit(s)]      
2023-12-15 02:45:56,123	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:45:56,123	[INFO]	90      TEST_CODE_ERROR       None  [11 edit(s)]      
2023-12-15 02:45:56,127	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:45:56,127	[INFO]	91      SUCCESS              +1201840 (99.8%) [11 edit(s)] 
2023-12-15 02:45:56,129	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,8 +1,8 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   //tv_sec=0, tv_nsec (0.001 seconds)
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:45:56,942	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'decl_stmt', 1)) | IfReplacement(('triangle.cpp.xml', 'if', 5), ('triangle.cpp.xml', 'stmt', 12))
2023-12-15 02:45:56,943	[INFO]	92      TEST_CODE_ERROR       None  [12 edit(s)]      
2023-12-15 02:45:57,734	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'decl_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 19))
2023-12-15 02:45:57,735	[INFO]	93      TEST_CODE_ERROR       None  [12 edit(s)]      
2023-12-15 02:45:58,608	[DEBUG]	EXEC>  SUCCESS 1201868
2023-12-15 02:45:58,608	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 22), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:45:58,609	[INFO]	94      SUCCESS               1201868 (99.8%) [12 edit(s)] 
2023-12-15 02:45:58,611	[INFO]	==== END ====
2023-12-15 02:45:58,611	[INFO]	
2023-12-15 02:45:58,611	[INFO]	==== REPORT ====
2023-12-15 02:45:58,612	[INFO]	Termination: time budget
2023-12-15 02:45:58,613	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1702608291.log
2023-12-15 02:45:58,614	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1702608291.patch
2023-12-15 02:45:58,614	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1702608291.diff
2023-12-15 02:45:58,615	[INFO]	Best fitness: 1201840
2023-12-15 02:45:58,615	[INFO]	Best patch: IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 7)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'return', 3)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:45:58,616	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,8 +1,8 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+   //tv_sec=0, tv_nsec (0.001 seconds)
+   /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -36,6 +32,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      tmp = a;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{


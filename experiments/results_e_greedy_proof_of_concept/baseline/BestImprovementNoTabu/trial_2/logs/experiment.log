2023-12-15 02:42:36,291	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 2
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results_e_greedy_proof_of_concept/baseline/BestImprovementNoTabu/trial_2
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = BestImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = UniformSelector

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-15 02:42:36,296	[INFO]	==== WARMUP ====
2023-12-15 02:42:39,010	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:42:39,010	[INFO]	WARM    SUCCESS               1204239                 
2023-12-15 02:42:39,983	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:42:39,983	[INFO]	WARM    SUCCESS               1204240                 
2023-12-15 02:42:40,981	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:42:40,982	[INFO]	WARM    SUCCESS               1204240                 
2023-12-15 02:42:42,012	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:42:42,012	[INFO]	WARM    SUCCESS               1204239                 
2023-12-15 02:42:43,013	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:42:43,014	[INFO]	WARM    SUCCESS               1204239                 
2023-12-15 02:42:43,014	[INFO]	INITIAL SUCCESS               1204239                 
2023-12-15 02:42:43,014	[INFO]	==== START: BestImprovementNoTabu ====
2023-12-15 02:42:43,175	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 0), ('triangle.cpp.xml', 'stmt', 12))
2023-12-15 02:42:43,176	[INFO]	1       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:42:43,953	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-15 02:42:43,954	[INFO]	2       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:44,741	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 19))
2023-12-15 02:42:44,741	[INFO]	3       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:44,885	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 6))
2023-12-15 02:42:44,885	[INFO]	4       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:42:45,857	[DEBUG]	EXEC>  SUCCESS 1204167
2023-12-15 02:42:45,858	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:42:45,859	[INFO]	5       SUCCESS              *1204167 (99.99%) [1 edit(s)] 
2023-12-15 02:42:45,861	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -17,9 +17,9 @@
     b = tmp;
   }
 
-  if(a > c) {
-    tmp = a;
-    a = c;
+  if(b > c) {
+    tmp = b;
+    b = c;
     c = tmp;
   }
 

2023-12-15 02:42:46,660	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 18))
2023-12-15 02:42:46,660	[INFO]	6       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:47,458	[DEBUG]	ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:42:47,459	[INFO]	7       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:48,251	[DEBUG]	ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 3))
2023-12-15 02:42:48,252	[INFO]	8       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:49,081	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:42:49,081	[INFO]	9       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:49,881	[DEBUG]	ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 6))
2023-12-15 02:42:49,882	[INFO]	10      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:50,872	[DEBUG]	EXEC>  SUCCESS 1203996
2023-12-15 02:42:50,872	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 0), ('triangle.cpp.xml', 'stmt', 0))
2023-12-15 02:42:50,873	[INFO]	11      SUCCESS              *1203996 (99.98%) [1 edit(s)] 
2023-12-15 02:42:50,875	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -11,11 +11,7 @@
   delay();
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  const struct timespec ms = {0, (long int) (0.001*1e9)};
 
   if(a > c) {
     tmp = a;

2023-12-15 02:42:51,727	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 8), ('triangle.cpp.xml', 'stmt', 20))
2023-12-15 02:42:51,728	[INFO]	12      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:52,556	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 4), ('triangle.cpp.xml', 'stmt', 16))
2023-12-15 02:42:52,556	[INFO]	13      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:53,327	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 1), ('triangle.cpp.xml', 'stmt', 5))
2023-12-15 02:42:53,328	[INFO]	14      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:53,477	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 14))
2023-12-15 02:42:53,477	[INFO]	15      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:42:54,284	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:42:54,284	[INFO]	16      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:54,425	[DEBUG]	DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:42:54,425	[INFO]	17      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:42:55,210	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:42:55,210	[INFO]	18      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:56,262	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:42:56,263	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 2), ('triangle.cpp.xml', 'stmt', 7))
2023-12-15 02:42:56,264	[INFO]	19      SUCCESS               1204239 (100.0%) [1 edit(s)] 
2023-12-15 02:42:57,065	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 5), ('triangle.cpp.xml', 'stmt', 3))
2023-12-15 02:42:57,066	[INFO]	20      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:42:57,952	[DEBUG]	EXEC>  SUCCESS 1201844
2023-12-15 02:42:57,952	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-15 02:42:57,953	[INFO]	21      SUCCESS              *1201844 (99.8%) [1 edit(s)] 
2023-12-15 02:42:57,954	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {

2023-12-15 02:42:58,728	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'if', 1))
2023-12-15 02:42:58,728	[INFO]	22      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:42:59,519	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 13))
2023-12-15 02:42:59,520	[INFO]	23      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:43:00,323	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 9))
2023-12-15 02:43:00,323	[INFO]	24      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:43:00,482	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-15 02:43:00,483	[INFO]	25      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:01,344	[DEBUG]	EXEC>  SUCCESS 1201877
2023-12-15 02:43:01,345	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 6), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:43:01,345	[INFO]	26      SUCCESS               1201877 (99.8%) [2 edit(s)] 
2023-12-15 02:43:01,488	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:01,489	[INFO]	27      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:02,233	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 30), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:43:02,234	[INFO]	28      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:43:03,121	[DEBUG]	EXEC>  SUCCESS 1201917
2023-12-15 02:43:03,122	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:43:03,122	[INFO]	29      SUCCESS               1201917 (99.81%) [2 edit(s)] 
2023-12-15 02:43:03,272	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'if', 5))
2023-12-15 02:43:03,273	[INFO]	30      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:04,131	[DEBUG]	EXEC>  SUCCESS 1201971
2023-12-15 02:43:04,132	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:43:04,132	[INFO]	31      SUCCESS               1201971 (99.81%) [2 edit(s)] 
2023-12-15 02:43:04,261	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 7))
2023-12-15 02:43:04,261	[INFO]	32      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:05,010	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 2))
2023-12-15 02:43:05,010	[INFO]	33      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:43:05,156	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:05,157	[INFO]	34      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:06,043	[DEBUG]	EXEC>  SUCCESS 1201846
2023-12-15 02:43:06,043	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:43:06,044	[INFO]	35      SUCCESS               1201846 (99.8%) [2 edit(s)] 
2023-12-15 02:43:06,935	[DEBUG]	EXEC>  SUCCESS 1202097
2023-12-15 02:43:06,935	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'if', 4))
2023-12-15 02:43:06,936	[INFO]	36      SUCCESS               1202097 (99.82%) [2 edit(s)] 
2023-12-15 02:43:07,090	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 14))
2023-12-15 02:43:07,091	[INFO]	37      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:07,227	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 18))
2023-12-15 02:43:07,228	[INFO]	38      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:07,364	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:07,365	[INFO]	39      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:08,183	[DEBUG]	EXEC>  SUCCESS 1201905
2023-12-15 02:43:08,184	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 22), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:43:08,184	[INFO]	40      SUCCESS               1201905 (99.81%) [2 edit(s)] 
2023-12-15 02:43:08,335	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 1), ('triangle.cpp.xml', 'stmt', 20))
2023-12-15 02:43:08,335	[INFO]	41      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:43:09,118	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 20))
2023-12-15 02:43:09,119	[INFO]	42      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:43:09,120	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -29,10 +29,7 @@
     c = tmp;
   }
 
-  if(a + b <= c)
-    /*auto*/{
-      return INVALID;
-    }/*auto*/
+  return EQUILATERAL;
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;

2023-12-15 02:43:09,908	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 8), ('triangle.cpp.xml', 'stmt', 7))
2023-12-15 02:43:09,909	[INFO]	43      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:43:09,910	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -24,7 +24,7 @@
   }
 
   if(b > c) {
-    tmp = b;
+    tmp = a;
     b = c;
     c = tmp;
   }

2023-12-15 02:43:10,672	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 19))
2023-12-15 02:43:10,672	[INFO]	44      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:43:10,673	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -39,7 +39,7 @@
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{
-      return ISOSCELES;
+      return INVALID;
     }/*auto*/
   return SCALENE;
 }

2023-12-15 02:43:11,451	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 2), ('triangle.cpp.xml', 'stmt', 4))
2023-12-15 02:43:11,451	[INFO]	45      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:43:11,452	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -39,7 +39,7 @@
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{
-      return ISOSCELES;
+      tmp = a;
     }/*auto*/
   return SCALENE;
 }

2023-12-15 02:43:12,245	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 3))
2023-12-15 02:43:12,246	[INFO]	46      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:43:12,247	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -29,10 +29,7 @@
     c = tmp;
   }
 
-  if(a + b <= c)
-    /*auto*/{
-      return INVALID;
-    }/*auto*/
+  
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;

2023-12-15 02:43:13,045	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-15 02:43:13,045	[INFO]	47      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:43:13,047	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -16,6 +16,7 @@
     a = b;
     b = tmp;
   }
+  b = tmp;
 
   if(a > c) {
     tmp = a;

2023-12-15 02:43:13,986	[DEBUG]	EXEC>  SUCCESS 1203580
2023-12-15 02:43:13,986	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-15 02:43:13,987	[INFO]	48      SUCCESS              +1203580 (99.95%) [2 edit(s)] 
2023-12-15 02:43:13,989	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,7 +8,7 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
@@ -27,6 +27,7 @@
     tmp = b;
     b = c;
     c = tmp;
+    delay();
   }
 
   if(a + b <= c)

2023-12-15 02:43:14,865	[DEBUG]	EXEC>  SUCCESS 1201476
2023-12-15 02:43:14,866	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0))
2023-12-15 02:43:14,867	[INFO]	49      SUCCESS              *1201476 (99.77%) [2 edit(s)] 
2023-12-15 02:43:14,868	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,14 +8,10 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;

2023-12-15 02:43:15,761	[DEBUG]	EXEC>  SUCCESS 1201601
2023-12-15 02:43:15,762	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:43:15,763	[INFO]	50      SUCCESS               1201601 (99.78%) [3 edit(s)] 
2023-12-15 02:43:16,579	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 1))
2023-12-15 02:43:16,579	[INFO]	51      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:17,400	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:43:17,401	[INFO]	52      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:18,193	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:43:18,194	[INFO]	53      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:19,063	[DEBUG]	EXEC>  SUCCESS 1201753
2023-12-15 02:43:19,063	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'if', 4))
2023-12-15 02:43:19,064	[INFO]	54      SUCCESS               1201753 (99.79%) [3 edit(s)] 
2023-12-15 02:43:19,202	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:19,202	[INFO]	55      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:43:20,159	[DEBUG]	EXEC>  SUCCESS 1203091
2023-12-15 02:43:20,159	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-15 02:43:20,160	[INFO]	56      SUCCESS               1203091 (99.9%) [3 edit(s)] 
2023-12-15 02:43:20,306	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 4), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:43:20,306	[INFO]	57      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:43:21,110	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ReturnDeletion(('triangle.cpp.xml', 'return', 0))
2023-12-15 02:43:21,110	[INFO]	58      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:21,257	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:43:21,257	[INFO]	59      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:43:22,015	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'return', 3))
2023-12-15 02:43:22,015	[INFO]	60      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:22,760	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 9), ('triangle.cpp.xml', 'stmt', 17))
2023-12-15 02:43:22,760	[INFO]	61      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:23,676	[DEBUG]	EXEC>  SUCCESS 1202912
2023-12-15 02:43:23,676	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 12), ('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-15 02:43:23,677	[INFO]	62      SUCCESS               1202912 (99.89%) [3 edit(s)] 
2023-12-15 02:43:23,679	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 0))
2023-12-15 02:43:23,679	[INFO]	63      SUCCESS               1201476 (99.77%) [3 edit(s)] 
2023-12-15 02:43:23,680	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:43:23,680	[INFO]	64      SUCCESS               1201476 (99.77%) [3 edit(s)] 
2023-12-15 02:43:24,524	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 17))
2023-12-15 02:43:24,525	[INFO]	65      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:25,284	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'expr_stmt', 3))
2023-12-15 02:43:25,285	[INFO]	66      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:26,044	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfDeletion(('triangle.cpp.xml', 'if', 3))
2023-12-15 02:43:26,045	[INFO]	67      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:26,818	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ReturnReplacement(('triangle.cpp.xml', 'return', 3), ('triangle.cpp.xml', 'stmt', 13))
2023-12-15 02:43:26,819	[INFO]	68      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:27,588	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 18))
2023-12-15 02:43:27,588	[INFO]	69      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:43:27,736	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 13))
2023-12-15 02:43:27,737	[INFO]	70      COMPILE_CODE_ERROR   +None  [3 edit(s)]       
2023-12-15 02:43:27,739	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,21 +1,21 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+  if(a > b) {
+    tmp = a;
+    a = b;
+    b = tmp;
+  } //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;

2023-12-15 02:43:28,500	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 10), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:43:28,500	[INFO]	71      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:29,258	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 8), ('triangle.cpp.xml', 'stmt', 0))
2023-12-15 02:43:29,258	[INFO]	72      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:30,060	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:43:30,061	[INFO]	73      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:30,981	[DEBUG]	EXEC>  SUCCESS 1201529
2023-12-15 02:43:30,981	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:43:30,982	[INFO]	74      SUCCESS               1201529 (99.77%) [4 edit(s)] 
2023-12-15 02:43:31,741	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:31,741	[INFO]	75      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:32,513	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:43:32,513	[INFO]	76      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:33,387	[DEBUG]	EXEC>  SUCCESS 1201506
2023-12-15 02:43:33,388	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 23), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:43:33,389	[INFO]	77      SUCCESS               1201506 (99.77%) [4 edit(s)] 
2023-12-15 02:43:34,169	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-15 02:43:34,169	[INFO]	78      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:34,928	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnReplacement(('triangle.cpp.xml', 'return', 3), ('triangle.cpp.xml', 'stmt', 16))
2023-12-15 02:43:34,929	[INFO]	79      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:35,744	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 9), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:43:35,744	[INFO]	80      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:36,622	[DEBUG]	EXEC>  SUCCESS 1201475
2023-12-15 02:43:36,623	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1))
2023-12-15 02:43:36,623	[INFO]	81      SUCCESS              *1201475 (99.77%) [4 edit(s)] 
2023-12-15 02:43:36,625	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,14 +8,10 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -42,4 +38,9 @@
       return ISOSCELES;
     }/*auto*/
   return SCALENE;
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
+  }
 }

2023-12-15 02:43:36,764	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:36,765	[INFO]	82      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:43:36,895	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:36,895	[INFO]	83      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:43:37,655	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 9))
2023-12-15 02:43:37,656	[INFO]	84      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:37,813	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:43:37,813	[INFO]	85      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:43:37,958	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 11))
2023-12-15 02:43:37,958	[INFO]	86      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:43:38,695	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'return', 0))
2023-12-15 02:43:38,696	[INFO]	87      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:43:39,564	[DEBUG]	EXEC>  SUCCESS 1201602
2023-12-15 02:43:39,565	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:43:39,565	[INFO]	88      SUCCESS               1201602 (99.78%) [4 edit(s)] 
2023-12-15 02:43:39,713	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:39,713	[INFO]	89      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:43:39,870	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 6))
2023-12-15 02:43:39,870	[INFO]	90      COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-12-15 02:43:40,016	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:43:40,017	[INFO]	91      COMPILE_CODE_ERROR   +None  [4 edit(s)]       
2023-12-15 02:43:40,018	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,21 +1,17 @@
 #include "triangle.hpp"
 
 void delay() {
-  const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
+   //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;

2023-12-15 02:43:40,809	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 1))
2023-12-15 02:43:40,809	[INFO]	92      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:43:40,961	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1)) | DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:43:40,962	[INFO]	93      COMPILE_CODE_ERROR    None  [5 edit(s)]       
2023-12-15 02:43:41,720	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'if', 5))
2023-12-15 02:43:41,721	[INFO]	94      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:43:41,874	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1)) | DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 2))
2023-12-15 02:43:41,874	[INFO]	95      COMPILE_CODE_ERROR    None  [5 edit(s)]       
2023-12-15 02:43:42,652	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 5))
2023-12-15 02:43:42,652	[INFO]	96      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:43:43,429	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 8))
2023-12-15 02:43:43,429	[INFO]	97      TEST_CODE_ERROR       None  [5 edit(s)]       
2023-12-15 02:43:43,431	[INFO]	==== END ====
2023-12-15 02:43:43,431	[INFO]	
2023-12-15 02:43:43,432	[INFO]	==== REPORT ====
2023-12-15 02:43:43,432	[INFO]	Termination: time budget
2023-12-15 02:43:43,433	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1702608156.log
2023-12-15 02:43:43,435	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1702608156.patch
2023-12-15 02:43:43,435	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1702608156.diff
2023-12-15 02:43:43,435	[INFO]	Best fitness: 1201475
2023-12-15 02:43:43,436	[INFO]	Best patch: ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 1)) | IfDeletion(('triangle.cpp.xml', 'if', 0)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 2)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'if', 1))
2023-12-15 02:43:43,436	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -8,14 +8,10 @@
 int classify_triangle(double a, double b, double c) {
   double tmp;
 
-  delay();
+  
 
   // Sort the sides so that a <= b <= c
-  if(a > b) {
-    tmp = a;
-    a = b;
-    b = tmp;
-  }
+  
 
   if(a > c) {
     tmp = a;
@@ -42,4 +38,9 @@
       return ISOSCELES;
     }/*auto*/
   return SCALENE;
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
+  }
 }


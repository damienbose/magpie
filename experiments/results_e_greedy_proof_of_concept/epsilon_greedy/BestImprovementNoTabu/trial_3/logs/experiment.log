2023-12-15 02:51:17,850	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 3
log_dir = _magpie_logs
work_dir = _magpie_work
final_out_dir = experiments/results_e_greedy_proof_of_concept/epsilon_greedy/BestImprovementNoTabu/trial_3
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 10000.0
diff_method = unified
trust_local_filesystem = True

[software]
path = examples/code/triangle-cpp_slow
target_files = 
	triangle.cpp.xml
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ./setup.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = ./build/test_triangle
test_timeout = 
test_lengthout = 
run_cmd = perf stat ./build/run_triangle
run_timeout = 1
run_lengthout = 
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_instructions

[srcml]
rename = 
focus = block break continue decl_stmt do expr_stmt for goto if return switch while
internodes = block
process_pseudo_blocks = True
process_literals = False
process_operators = False

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = BestImprovementNoTabu
possible_edits = 
	DeclStmtReplacement
	ExprStmtReplacement
	IfReplacement
	ReturnReplacement
	DeclStmtInsertion
	ExprStmtInsertion
	IfInsertion
	ReturnInsertion
	DeclStmtDeletion
	ExprStmtDeletion
	IfDeletion
	ReturnDeletion
warmup = 5
warmup_strategy = last
max_steps = 100
max_time = 60
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1
operator_selector = EpsilonGreedy
epsilon = 0.2

[search.ls]
delete_prob = 0
max_neighbours = 20
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2023-12-15 02:51:17,855	[INFO]	==== WARMUP ====
2023-12-15 02:51:20,373	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:51:20,373	[INFO]	WARM    SUCCESS               1204239                 
2023-12-15 02:51:21,308	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:51:21,309	[INFO]	WARM    SUCCESS               1204240                 
2023-12-15 02:51:22,326	[DEBUG]	EXEC>  SUCCESS 1204241
2023-12-15 02:51:22,326	[INFO]	WARM    SUCCESS               1204241                 
2023-12-15 02:51:23,286	[DEBUG]	EXEC>  SUCCESS 1204238
2023-12-15 02:51:23,287	[INFO]	WARM    SUCCESS               1204238                 
2023-12-15 02:51:24,253	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:51:24,253	[INFO]	WARM    SUCCESS               1204240                 
2023-12-15 02:51:24,254	[INFO]	INITIAL SUCCESS               1204240                 
2023-12-15 02:51:24,254	[INFO]	==== START: BestImprovementNoTabu ====
2023-12-15 02:51:24,426	[DEBUG]	DeclStmtReplacement(('triangle.cpp.xml', 'decl_stmt', 0), ('triangle.cpp.xml', 'stmt', 3))
2023-12-15 02:51:24,427	[INFO]	1       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:51:25,210	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 10), ('triangle.cpp.xml', 'stmt', 22))
2023-12-15 02:51:25,210	[INFO]	2       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:26,204	[DEBUG]	EXEC>  SUCCESS 1204311
2023-12-15 02:51:26,205	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:26,205	[INFO]	3       SUCCESS               1204311 (100.01%) [1 edit(s)] 
2023-12-15 02:51:27,036	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 3), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:51:27,036	[INFO]	4       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:27,870	[DEBUG]	ReturnReplacement(('triangle.cpp.xml', 'return', 1), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:51:27,870	[INFO]	5       TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:28,018	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 2), ('triangle.cpp.xml', 'stmt', 2))
2023-12-15 02:51:28,018	[INFO]	6       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:51:28,988	[DEBUG]	EXEC>  SUCCESS 1204293
2023-12-15 02:51:28,989	[DEBUG]	ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:51:28,989	[INFO]	7       SUCCESS               1204293 (100.0%) [1 edit(s)] 
2023-12-15 02:51:29,122	[DEBUG]	IfInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'if', 2))
2023-12-15 02:51:29,122	[INFO]	8       COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:51:30,075	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:51:30,076	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'return', 2))
2023-12-15 02:51:30,077	[INFO]	9       SUCCESS              *1204239 (100.0%) [1 edit(s)] 
2023-12-15 02:51:30,078	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -40,6 +40,7 @@
   if(a == b || b == c)
     /*auto*/{
       return ISOSCELES;
+      return ISOSCELES;
     }/*auto*/
   return SCALENE;
 }

2023-12-15 02:51:30,382	[DEBUG]	DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:30,382	[INFO]	10      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:51:31,178	[DEBUG]	ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-15 02:51:31,179	[INFO]	11      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:32,001	[DEBUG]	IfDeletion(('triangle.cpp.xml', 'if', 2))
2023-12-15 02:51:32,001	[INFO]	12      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:32,844	[DEBUG]	ReturnDeletion(('triangle.cpp.xml', 'return', 1))
2023-12-15 02:51:32,844	[INFO]	13      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:33,677	[DEBUG]	ReturnInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'return', 3))
2023-12-15 02:51:33,677	[INFO]	14      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:34,720	[DEBUG]	EXEC>  SUCCESS 1204365
2023-12-15 02:51:34,721	[DEBUG]	ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:51:34,722	[INFO]	15      SUCCESS               1204365 (100.01%) [1 edit(s)] 
2023-12-15 02:51:35,711	[DEBUG]	EXEC>  SUCCESS 1204299
2023-12-15 02:51:35,711	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:35,713	[INFO]	16      SUCCESS               1204299 (100.0%) [1 edit(s)] 
2023-12-15 02:51:36,528	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 7), ('triangle.cpp.xml', 'stmt', 4))
2023-12-15 02:51:36,528	[INFO]	17      TEST_CODE_ERROR       None  [1 edit(s)]       
2023-12-15 02:51:36,672	[DEBUG]	DeclStmtDeletion(('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:36,672	[INFO]	18      COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-12-15 02:51:37,610	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:51:37,612	[DEBUG]	IfReplacement(('triangle.cpp.xml', 'if', 2), ('triangle.cpp.xml', 'stmt', 15))
2023-12-15 02:51:37,612	[INFO]	19      SUCCESS               1204239 (100.0%) [1 edit(s)] 
2023-12-15 02:51:38,583	[DEBUG]	EXEC>  SUCCESS 1204238
2023-12-15 02:51:38,584	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:38,584	[INFO]	20      SUCCESS              *1204238 (100.0%) [1 edit(s)] 
2023-12-15 02:51:38,586	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-15 02:51:39,402	[DEBUG]	ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 2), ('triangle.cpp.xml', 'stmt', 8))
2023-12-15 02:51:39,402	[INFO]	21      TEST_CODE_ERROR      +None  [1 edit(s)]       
2023-12-15 02:51:39,404	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -12,7 +12,7 @@
 
   // Sort the sides so that a <= b <= c
   if(a > b) {
-    tmp = a;
+    a = c;
     a = b;
     b = tmp;
   }

2023-12-15 02:51:39,550	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 3), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:39,550	[INFO]	22      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:39,691	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 4), ('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-15 02:51:39,691	[INFO]	23      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:40,506	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 3))
2023-12-15 02:51:40,506	[INFO]	24      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:40,654	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:40,654	[INFO]	25      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:40,798	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:51:40,799	[INFO]	26      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:41,597	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:41,597	[INFO]	27      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:42,415	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 4), ('triangle.cpp.xml', 'return', 1))
2023-12-15 02:51:42,415	[INFO]	28      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:43,252	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ReturnDeletion(('triangle.cpp.xml', 'return', 2))
2023-12-15 02:51:43,252	[INFO]	29      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:43,409	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:43,409	[INFO]	30      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:44,182	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 14), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:51:44,182	[INFO]	31      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:44,960	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:44,961	[INFO]	32      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:45,100	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 17), ('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-15 02:51:45,101	[INFO]	33      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:45,907	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 10), ('triangle.cpp.xml', 'stmt', 16))
2023-12-15 02:51:45,908	[INFO]	34      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:46,915	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:51:46,915	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:46,916	[INFO]	35      SUCCESS               1204239 (100.0%) [2 edit(s)] 
2023-12-15 02:51:47,724	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ReturnReplacement(('triangle.cpp.xml', 'return', 0), ('triangle.cpp.xml', 'stmt', 10))
2023-12-15 02:51:47,724	[INFO]	36      TEST_CODE_ERROR       None  [2 edit(s)]       
2023-12-15 02:51:48,724	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:51:48,725	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 14), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:48,725	[INFO]	37      SUCCESS               1204239 (100.0%) [2 edit(s)] 
2023-12-15 02:51:49,685	[DEBUG]	EXEC>  SUCCESS 1204287
2023-12-15 02:51:49,686	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 16), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:49,687	[INFO]	38      SUCCESS               1204287 (100.0%) [2 edit(s)] 
2023-12-15 02:51:50,702	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:51:50,702	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:50,703	[INFO]	39      SUCCESS               1204240 (100.0%) [2 edit(s)] 
2023-12-15 02:51:50,849	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:50,849	[INFO]	40      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:50,994	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:50,994	[INFO]	41      COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-12-15 02:51:51,131	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 10), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:51,132	[INFO]	42      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-15 02:51:51,133	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -33,6 +34,7 @@
     /*auto*/{
       return INVALID;
     }/*auto*/
+  double tmp;
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;

2023-12-15 02:51:51,980	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ReturnInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'return', 3))
2023-12-15 02:51:51,981	[INFO]	43      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:51:51,983	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -26,6 +27,7 @@
   if(b > c) {
     tmp = b;
     b = c;
+    return SCALENE;
     c = tmp;
   }
 

2023-12-15 02:51:53,001	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:51:53,001	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 13), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:53,002	[INFO]	44      SUCCESS              +1204239 (100.0%) [2 edit(s)] 
2023-12-15 02:51:53,003	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -42,4 +43,5 @@
       return ISOSCELES;
     }/*auto*/
   return SCALENE;
+  const struct timespec ms = {0, (long int) (0.001*1e9)};
 }

2023-12-15 02:51:54,008	[DEBUG]	EXEC>  SUCCESS 1401829
2023-12-15 02:51:54,009	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 7), ('triangle.cpp.xml', 'if', 3))
2023-12-15 02:51:54,010	[INFO]	45      SUCCESS              +1401829 (116.41%) [2 edit(s)] 
2023-12-15 02:51:54,013	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -16,6 +17,10 @@
     a = b;
     b = tmp;
   }
+  if(a + b <= c)
+    /*auto*/{
+      return INVALID;
+    }/*auto*/
 
   if(a > c) {
     tmp = a;

2023-12-15 02:51:55,040	[DEBUG]	EXEC>  SUCCESS 1204293
2023-12-15 02:51:55,041	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:55,042	[INFO]	46      SUCCESS              +1204293 (100.0%) [2 edit(s)] 
2023-12-15 02:51:55,043	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -31,6 +32,7 @@
 
   if(a + b <= c)
     /*auto*/{
+      const struct timespec ms = {0, (long int) (0.001*1e9)};
       return INVALID;
     }/*auto*/
   if(a == b && b == c)

2023-12-15 02:51:56,021	[DEBUG]	EXEC>  SUCCESS 1317900
2023-12-15 02:51:56,021	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 30), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:56,023	[INFO]	47      SUCCESS              +1317900 (109.44%) [2 edit(s)] 
2023-12-15 02:51:56,024	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -39,6 +40,7 @@
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{
+      double tmp;
       return ISOSCELES;
     }/*auto*/
   return SCALENE;

2023-12-15 02:51:56,195	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 8), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:56,195	[INFO]	48      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-15 02:51:56,197	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -22,6 +23,7 @@
     a = c;
     c = tmp;
   }
+  double tmp;
 
   if(b > c) {
     tmp = b;

2023-12-15 02:51:57,195	[DEBUG]	EXEC>  SUCCESS 1204300
2023-12-15 02:51:57,196	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:57,197	[INFO]	49      SUCCESS              +1204300 (100.0%) [2 edit(s)] 
2023-12-15 02:51:57,198	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -27,6 +28,7 @@
     tmp = b;
     b = c;
     c = tmp;
+    const struct timespec ms = {0, (long int) (0.001*1e9)};
   }
 
   if(a + b <= c)

2023-12-15 02:51:57,336	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:57,337	[INFO]	50      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-15 02:51:57,338	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -1,8 +1,10 @@
 #include "triangle.hpp"
 
 void delay() {
+  const struct timespec ms = {0, (long int) (0.001*1e9)};
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {

2023-12-15 02:51:57,462	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 9), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:57,463	[INFO]	51      COMPILE_CODE_ERROR   +None  [2 edit(s)]       
2023-12-15 02:51:57,464	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -28,6 +29,7 @@
     b = c;
     c = tmp;
   }
+  double tmp;
 
   if(a + b <= c)
     /*auto*/{

2023-12-15 02:51:58,457	[DEBUG]	EXEC>  SUCCESS 1204241
2023-12-15 02:51:58,458	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 28), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:51:58,459	[INFO]	52      SUCCESS              +1204241 (100.0%) [2 edit(s)] 
2023-12-15 02:51:58,461	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -35,6 +36,7 @@
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
+      double tmp;
       return EQUILATERAL;
     }/*auto*/
   if(a == b || b == c)

2023-12-15 02:51:59,496	[DEBUG]	EXEC>  SUCCESS 1204365
2023-12-15 02:51:59,497	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 5), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:51:59,497	[INFO]	53      SUCCESS              +1204365 (100.01%) [2 edit(s)] 
2023-12-15 02:51:59,499	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,11 +2,13 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
+  const struct timespec ms = {0, (long int) (0.001*1e9)};
 
   delay();
 

2023-12-15 02:52:00,432	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:52:00,432	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:52:00,433	[INFO]	54      SUCCESS              +1204240 (100.0%) [2 edit(s)] 
2023-12-15 02:52:00,435	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -40,6 +41,7 @@
   if(a == b || b == c)
     /*auto*/{
       return ISOSCELES;
+      const struct timespec ms = {0, (long int) (0.001*1e9)};
     }/*auto*/
   return SCALENE;
 }

2023-12-15 02:52:01,231	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:01,232	[INFO]	55      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:52:01,233	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -20,6 +21,7 @@
   if(a > c) {
     tmp = a;
     a = c;
+    double tmp;
     c = tmp;
   }
 

2023-12-15 02:52:02,231	[DEBUG]	EXEC>  SUCCESS 1204239
2023-12-15 02:52:02,232	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:02,233	[INFO]	56      SUCCESS              +1204239 (100.0%) [2 edit(s)] 
2023-12-15 02:52:02,234	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -18,6 +19,7 @@
   }
 
   if(a > c) {
+    double tmp;
     tmp = a;
     a = c;
     c = tmp;

2023-12-15 02:52:03,110	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtReplacement(('triangle.cpp.xml', 'expr_stmt', 5), ('triangle.cpp.xml', 'stmt', 13))
2023-12-15 02:52:03,111	[INFO]	57      TEST_CODE_ERROR      +None  [2 edit(s)]       
2023-12-15 02:52:03,113	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -18,7 +19,11 @@
   }
 
   if(a > c) {
-    tmp = a;
+    if(a > b) {
+      tmp = a;
+      a = b;
+      b = tmp;
+    }
     a = c;
     c = tmp;
   }

2023-12-15 02:52:03,114	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 26), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:52:03,115	[INFO]	58      SUCCESS              +1204293 (100.0%) [2 edit(s)] 
2023-12-15 02:52:03,116	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -31,6 +32,7 @@
 
   if(a + b <= c)
     /*auto*/{
+      const struct timespec ms = {0, (long int) (0.001*1e9)};
       return INVALID;
     }/*auto*/
   if(a == b && b == c)

2023-12-15 02:52:04,091	[DEBUG]	EXEC>  SUCCESS 1204238
2023-12-15 02:52:04,092	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-15 02:52:04,093	[INFO]	59      SUCCESS              +1204238 (100.0%) [2 edit(s)] 
2023-12-15 02:52:04,095	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -36,6 +37,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      c = tmp;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:52:05,116	[DEBUG]	EXEC>  SUCCESS 1824108
2023-12-15 02:52:05,116	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:05,117	[INFO]	60      SUCCESS               1824108 (151.47%) [3 edit(s)] 
2023-12-15 02:52:05,257	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 0))
2023-12-15 02:52:05,257	[INFO]	61      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:52:06,090	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:06,091	[INFO]	62      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:07,095	[DEBUG]	EXEC>  SUCCESS 1298126
2023-12-15 02:52:07,096	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'if', 5))
2023-12-15 02:52:07,096	[INFO]	63      SUCCESS               1298126 (107.8%) [3 edit(s)] 
2023-12-15 02:52:07,257	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfInsertion(('triangle.cpp.xml', '_inter_block', 0), ('triangle.cpp.xml', 'if', 1))
2023-12-15 02:52:07,258	[INFO]	64      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:52:08,036	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 15), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:08,036	[INFO]	65      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:09,177	[DEBUG]	EXEC>  SUCCESS 1205499
2023-12-15 02:52:09,177	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-15 02:52:09,178	[INFO]	66      SUCCESS               1205499 (100.1%) [3 edit(s)] 
2023-12-15 02:52:09,322	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:09,322	[INFO]	67      COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-12-15 02:52:10,122	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfDeletion(('triangle.cpp.xml', 'if', 3))
2023-12-15 02:52:10,123	[INFO]	68      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:10,126	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:10,126	[INFO]	69      SUCCESS               1824108 (151.47%) [3 edit(s)] 
2023-12-15 02:52:11,001	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:11,001	[INFO]	70      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:11,853	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 19), ('triangle.cpp.xml', 'decl_stmt', 1))
2023-12-15 02:52:11,853	[INFO]	71      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:12,868	[DEBUG]	EXEC>  SUCCESS 1204779
2023-12-15 02:52:12,868	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 11), ('triangle.cpp.xml', 'expr_stmt', 1))
2023-12-15 02:52:12,869	[INFO]	72      SUCCESS               1204779 (100.04%) [3 edit(s)] 
2023-12-15 02:52:13,876	[DEBUG]	EXEC>  SUCCESS 1204287
2023-12-15 02:52:13,877	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 14), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:52:13,878	[INFO]	73      SUCCESS               1204287 (100.0%) [3 edit(s)] 
2023-12-15 02:52:14,732	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 18), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:52:14,733	[INFO]	74      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:15,783	[DEBUG]	EXEC>  SUCCESS 1304679
2023-12-15 02:52:15,783	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 1), ('triangle.cpp.xml', 'expr_stmt', 0))
2023-12-15 02:52:15,784	[INFO]	75      SUCCESS               1304679 (108.34%) [3 edit(s)] 
2023-12-15 02:52:16,756	[DEBUG]	EXEC>  SUCCESS 1204103
2023-12-15 02:52:16,756	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4))
2023-12-15 02:52:16,757	[INFO]	76      SUCCESS              *1204103 (99.99%) [3 edit(s)] 
2023-12-15 02:52:16,760	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -17,11 +18,7 @@
     b = tmp;
   }
 
-  if(a > c) {
-    tmp = a;
-    a = c;
-    c = tmp;
-  }
+  tmp = a;
 
   if(b > c) {
     tmp = b;
@@ -36,6 +33,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      c = tmp;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:52:17,590	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 25), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:52:17,590	[INFO]	77      TEST_CODE_ERROR       None  [3 edit(s)]       
2023-12-15 02:52:18,588	[DEBUG]	EXEC>  SUCCESS 1204240
2023-12-15 02:52:18,589	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:52:18,590	[INFO]	78      SUCCESS               1204240 (100.0%) [3 edit(s)] 
2023-12-15 02:52:19,576	[DEBUG]	EXEC>  SUCCESS 1204366
2023-12-15 02:52:19,576	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 6), ('triangle.cpp.xml', 'expr_stmt', 8))
2023-12-15 02:52:19,577	[INFO]	79      SUCCESS               1204366 (100.01%) [3 edit(s)] 
2023-12-15 02:52:20,538	[DEBUG]	EXEC>  SUCCESS 1271566
2023-12-15 02:52:20,538	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 28), ('triangle.cpp.xml', 'expr_stmt', 9))
2023-12-15 02:52:20,539	[INFO]	80      SUCCESS              +1271566 (105.59%) [3 edit(s)] 
2023-12-15 02:52:20,541	[DEBUG]	--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -35,7 +36,9 @@
     }/*auto*/
   if(a == b && b == c)
     /*auto*/{
+      b = c;
       return EQUILATERAL;
+      c = tmp;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

2023-12-15 02:52:20,543	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 31), ('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:52:20,543	[INFO]	81      SUCCESS               1204103 (99.99%) [4 edit(s)] 
2023-12-15 02:52:21,537	[DEBUG]	EXEC>  SUCCESS 1204104
2023-12-15 02:52:21,537	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 24), ('triangle.cpp.xml', 'expr_stmt', 2))
2023-12-15 02:52:21,538	[INFO]	82      SUCCESS               1204104 (99.99%) [4 edit(s)] 
2023-12-15 02:52:22,345	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4)) | ExprStmtDeletion(('triangle.cpp.xml', 'expr_stmt', 4))
2023-12-15 02:52:22,345	[INFO]	83      TEST_CODE_ERROR       None  [4 edit(s)]       
2023-12-15 02:52:23,352	[DEBUG]	EXEC>  SUCCESS 1204170
2023-12-15 02:52:23,353	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 20), ('triangle.cpp.xml', 'expr_stmt', 10))
2023-12-15 02:52:23,354	[INFO]	84      SUCCESS               1204170 (99.99%) [4 edit(s)] 
2023-12-15 02:52:24,395	[DEBUG]	EXEC>  SUCCESS 1204105
2023-12-15 02:52:24,395	[DEBUG]	DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 27), ('triangle.cpp.xml', 'expr_stmt', 5))
2023-12-15 02:52:24,396	[INFO]	85      SUCCESS               1204105 (99.99%) [4 edit(s)] 
2023-12-15 02:52:24,398	[INFO]	==== END ====
2023-12-15 02:52:24,399	[INFO]	
2023-12-15 02:52:24,399	[INFO]	==== REPORT ====
2023-12-15 02:52:24,400	[INFO]	Termination: time budget
2023-12-15 02:52:24,400	[INFO]	Log file: /cs/student/ug/2020/damibose/projects/magpie/_magpie_logs/triangle-cpp_slow_1702608677.log
2023-12-15 02:52:24,402	[INFO]	Patch file: _magpie_logs/triangle-cpp_slow_1702608677.patch
2023-12-15 02:52:24,402	[INFO]	Diff file: _magpie_logs/triangle-cpp_slow_1702608677.diff
2023-12-15 02:52:24,403	[INFO]	Best fitness: 1204103
2023-12-15 02:52:24,403	[INFO]	Best patch: DeclStmtInsertion(('triangle.cpp.xml', '_inter_block', 2), ('triangle.cpp.xml', 'decl_stmt', 1)) | ExprStmtInsertion(('triangle.cpp.xml', '_inter_block', 29), ('triangle.cpp.xml', 'expr_stmt', 10)) | IfReplacement(('triangle.cpp.xml', 'if', 1), ('triangle.cpp.xml', 'stmt', 4))
2023-12-15 02:52:24,404	[INFO]	Diff:
--- before: triangle.cpp
+++ after: triangle.cpp
@@ -2,7 +2,8 @@
 
 void delay() {
   const struct timespec ms = {0, (long int) (0.001*1e9)}; //tv_sec=0, tv_nsec (0.001 seconds)
-  nanosleep(&ms,NULL); /*ignores possible errors*/
+  nanosleep(&ms,NULL);
+  double tmp; /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
@@ -17,11 +18,7 @@
     b = tmp;
   }
 
-  if(a > c) {
-    tmp = a;
-    a = c;
-    c = tmp;
-  }
+  tmp = a;
 
   if(b > c) {
     tmp = b;
@@ -36,6 +33,7 @@
   if(a == b && b == c)
     /*auto*/{
       return EQUILATERAL;
+      c = tmp;
     }/*auto*/
   if(a == b || b == c)
     /*auto*/{

